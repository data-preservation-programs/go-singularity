// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StorageB2Config storage b2 config
//
// swagger:model storage.B2Config
type StorageB2Config struct {

	// Account ID or Application Key ID.
	Account string `json:"account,omitempty"`

	// Upload chunk size.
	ChunkSize *string `json:"chunkSize,omitempty"`

	// Cutoff for switching to multipart copy.
	CopyCutoff *string `json:"copyCutoff,omitempty"`

	// Disable checksums for large (> upload cutoff) files.
	DisableChecksum *bool `json:"disableChecksum,omitempty"`

	// Time before the authorization token will expire in s or suffix ms|s|m|h|d.
	DownloadAuthDuration *string `json:"downloadAuthDuration,omitempty"`

	// Custom endpoint for downloads.
	DownloadURL string `json:"downloadUrl,omitempty"`

	// The encoding for the backend.
	Encoding *string `json:"encoding,omitempty"`

	// Endpoint for the service.
	Endpoint string `json:"endpoint,omitempty"`

	// Permanently delete files on remote removal, otherwise hide files.
	HardDelete *bool `json:"hardDelete,omitempty"`

	// Application Key.
	Key string `json:"key,omitempty"`

	// How often internal memory buffer pools will be flushed.
	MemoryPoolFlushTime *string `json:"memoryPoolFlushTime,omitempty"`

	// Whether to use mmap buffers in internal memory pool.
	MemoryPoolUseMmap *bool `json:"memoryPoolUseMmap,omitempty"`

	// A flag string for X-Bz-Test-Mode header for debugging.
	TestMode string `json:"testMode,omitempty"`

	// Cutoff for switching to chunked upload.
	UploadCutoff *string `json:"uploadCutoff,omitempty"`

	// Show file versions as they were at the specified time.
	VersionAt *string `json:"versionAt,omitempty"`

	// Include old versions in directory listings.
	Versions *bool `json:"versions,omitempty"`
}

// Validate validates this storage b2 config
func (m *StorageB2Config) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this storage b2 config based on context it is used
func (m *StorageB2Config) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StorageB2Config) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StorageB2Config) UnmarshalBinary(b []byte) error {
	var res StorageB2Config
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
