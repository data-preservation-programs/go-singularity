// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StorageSmbConfig storage smb config
//
// swagger:model storage.smbConfig
type StorageSmbConfig struct {

	// Whether the server is configured to be case-insensitive.
	CaseInsensitive *bool `json:"caseInsensitive,omitempty"`

	// Domain name for NTLM authentication.
	Domain *string `json:"domain,omitempty"`

	// The encoding for the backend.
	Encoding *string `json:"encoding,omitempty"`

	// Hide special shares (e.g. print$) which users aren't supposed to access.
	HideSpecialShare *bool `json:"hideSpecialShare,omitempty"`

	// SMB server hostname to connect to.
	Host string `json:"host,omitempty"`

	// Max time before closing idle connections.
	IdleTimeout *string `json:"idleTimeout,omitempty"`

	// SMB password.
	Pass string `json:"pass,omitempty"`

	// SMB port number.
	Port *int64 `json:"port,omitempty"`

	// Service principal name.
	Spn string `json:"spn,omitempty"`

	// SMB username.
	User *string `json:"user,omitempty"`
}

// Validate validates this storage smb config
func (m *StorageSmbConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this storage smb config based on context it is used
func (m *StorageSmbConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StorageSmbConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StorageSmbConfig) UnmarshalBinary(b []byte) error {
	var res StorageSmbConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
