// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StorageInternetarchiveConfig storage internetarchive config
//
// swagger:model storage.internetarchiveConfig
type StorageInternetarchiveConfig struct {

	// IAS3 Access Key.
	AccessKeyID string `json:"accessKeyId,omitempty"`

	// Don't ask the server to test against MD5 checksum calculated by rclone.
	DisableChecksum *bool `json:"disableChecksum,omitempty"`

	// The encoding for the backend.
	Encoding *string `json:"encoding,omitempty"`

	// IAS3 Endpoint.
	Endpoint *string `json:"endpoint,omitempty"`

	// Host of InternetArchive Frontend.
	FrontEndpoint *string `json:"frontEndpoint,omitempty"`

	// IAS3 Secret Key (password).
	SecretAccessKey string `json:"secretAccessKey,omitempty"`

	// Timeout for waiting the server's processing tasks (specifically archive and book_op) to finish.
	WaitArchive *string `json:"waitArchive,omitempty"`
}

// Validate validates this storage internetarchive config
func (m *StorageInternetarchiveConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this storage internetarchive config based on context it is used
func (m *StorageInternetarchiveConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StorageInternetarchiveConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StorageInternetarchiveConfig) UnmarshalBinary(b []byte) error {
	var res StorageInternetarchiveConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
