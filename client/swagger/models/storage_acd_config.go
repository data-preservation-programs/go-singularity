// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StorageAcdConfig storage acd config
//
// swagger:model storage.AcdConfig
type StorageAcdConfig struct {

	// Auth server URL.
	AuthURL string `json:"authUrl,omitempty"`

	// Checkpoint for internal polling (debug).
	Checkpoint string `json:"checkpoint,omitempty"`

	// OAuth Client Id.
	ClientID string `json:"clientId,omitempty"`

	// OAuth Client Secret.
	ClientSecret string `json:"clientSecret,omitempty"`

	// The encoding for the backend.
	Encoding *string `json:"encoding,omitempty"`

	// Files >= this size will be downloaded via their tempLink.
	TemplinkThreshold *string `json:"templinkThreshold,omitempty"`

	// OAuth Access Token as a JSON blob.
	Token string `json:"token,omitempty"`

	// Token server url.
	TokenURL string `json:"tokenUrl,omitempty"`

	// Additional time per GiB to wait after a failed complete upload to see if it appears.
	UploadWaitPerGb *string `json:"uploadWaitPerGb,omitempty"`
}

// Validate validates this storage acd config
func (m *StorageAcdConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this storage acd config based on context it is used
func (m *StorageAcdConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StorageAcdConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StorageAcdConfig) UnmarshalBinary(b []byte) error {
	var res StorageAcdConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
