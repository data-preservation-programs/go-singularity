// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StoragePcloudConfig storage pcloud config
//
// swagger:model storage.pcloudConfig
type StoragePcloudConfig struct {

	// Auth server URL.
	AuthURL string `json:"authUrl,omitempty"`

	// OAuth Client Id.
	ClientID string `json:"clientId,omitempty"`

	// OAuth Client Secret.
	ClientSecret string `json:"clientSecret,omitempty"`

	// The encoding for the backend.
	Encoding *string `json:"encoding,omitempty"`

	// Hostname to connect to.
	// Example: api.pcloud.com
	Hostname *string `json:"hostname,omitempty"`

	// Your pcloud password.
	Password string `json:"password,omitempty"`

	// Fill in for rclone to use a non root folder as its starting point.
	RootFolderID *string `json:"rootFolderId,omitempty"`

	// OAuth Access Token as a JSON blob.
	Token string `json:"token,omitempty"`

	// Token server url.
	TokenURL string `json:"tokenUrl,omitempty"`

	// Your pcloud username.
	Username string `json:"username,omitempty"`
}

// Validate validates this storage pcloud config
func (m *StoragePcloudConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this storage pcloud config based on context it is used
func (m *StoragePcloudConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StoragePcloudConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StoragePcloudConfig) UnmarshalBinary(b []byte) error {
	var res StoragePcloudConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
