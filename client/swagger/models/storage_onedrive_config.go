// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StorageOnedriveConfig storage onedrive config
//
// swagger:model storage.onedriveConfig
type StorageOnedriveConfig struct {

	// Set scopes to be requested by rclone.
	// Example: Files.Read Files.ReadWrite Files.Read.All Files.ReadWrite.All Sites.Read.All offline_access
	AccessScopes *string `json:"accessScopes,omitempty"`

	// Auth server URL.
	AuthURL string `json:"authUrl,omitempty"`

	// Chunk size to upload files with - must be multiple of 320k (327,680 bytes).
	ChunkSize *string `json:"chunkSize,omitempty"`

	// OAuth Client Id.
	ClientID string `json:"clientId,omitempty"`

	// OAuth Client Secret.
	ClientSecret string `json:"clientSecret,omitempty"`

	// Disable the request for Sites.Read.All permission.
	DisableSitePermission *bool `json:"disableSitePermission,omitempty"`

	// The ID of the drive to use.
	DriveID string `json:"driveId,omitempty"`

	// The type of the drive (personal | business | documentLibrary).
	DriveType string `json:"driveType,omitempty"`

	// The encoding for the backend.
	Encoding *string `json:"encoding,omitempty"`

	// Set to make OneNote files show up in directory listings.
	ExposeOnenoteFiles *bool `json:"exposeOnenoteFiles,omitempty"`

	// Specify the hash in use for the backend.
	// Example: auto
	HashType *string `json:"hashType,omitempty"`

	// Set the password for links created by the link command.
	LinkPassword string `json:"linkPassword,omitempty"`

	// Set the scope of the links created by the link command.
	// Example: anonymous
	LinkScope *string `json:"linkScope,omitempty"`

	// Set the type of the links created by the link command.
	// Example: view
	LinkType *string `json:"linkType,omitempty"`

	// Size of listing chunk.
	ListChunk *int64 `json:"listChunk,omitempty"`

	// Remove all versions on modifying operations.
	NoVersions *bool `json:"noVersions,omitempty"`

	// Choose national cloud region for OneDrive.
	// Example: global
	Region *string `json:"region,omitempty"`

	// ID of the root folder.
	RootFolderID string `json:"rootFolderId,omitempty"`

	// Allow server-side operations (e.g. copy) to work across different onedrive configs.
	ServerSideAcrossConfigs *bool `json:"serverSideAcrossConfigs,omitempty"`

	// OAuth Access Token as a JSON blob.
	Token string `json:"token,omitempty"`

	// Token server url.
	TokenURL string `json:"tokenUrl,omitempty"`
}

// Validate validates this storage onedrive config
func (m *StorageOnedriveConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this storage onedrive config based on context it is used
func (m *StorageOnedriveConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StorageOnedriveConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StorageOnedriveConfig) UnmarshalBinary(b []byte) error {
	var res StorageOnedriveConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
