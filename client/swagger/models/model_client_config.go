// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ModelClientConfig model client config
//
// swagger:model model.ClientConfig
type ModelClientConfig struct {

	// Paths to CA certificate used to verify servers
	CaCert []string `json:"caCert"`

	// Path to Client SSL certificate (PEM) for mutual TLS auth
	ClientCert string `json:"clientCert,omitempty"`

	// Path to Client SSL private key (PEM) for mutual TLS auth
	ClientKey string `json:"clientKey,omitempty"`

	// HTTP Client Connect timeout
	ConnectTimeout int64 `json:"connectTimeout,omitempty"`

	// Disable HTTP/2 in the transport
	DisableHttp2 bool `json:"disableHttp2,omitempty"`

	// Disable HTTP keep-alives and use each connection once.
	DisableHTTPKeepAlives bool `json:"disableHttpKeepAlives,omitempty"`

	// Timeout when using expect / 100-continue in HTTP
	ExpectContinueTimeout int64 `json:"expectContinueTimeout,omitempty"`

	// Set HTTP header for all transactions
	Headers map[string]string `json:"headers,omitempty"`

	// Do not verify the server SSL certificate (insecure)
	InsecureSkipVerify bool `json:"insecureSkipVerify,omitempty"`

	// Don't set Accept-Encoding: gzip
	NoGzip bool `json:"noGzip,omitempty"`

	// IO idle timeout
	Timeout int64 `json:"timeout,omitempty"`

	// Set the user-agent to a specified string
	UserAgent string `json:"userAgent,omitempty"`
}

// Validate validates this model client config
func (m *ModelClientConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this model client config based on context it is used
func (m *ModelClientConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelClientConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelClientConfig) UnmarshalBinary(b []byte) error {
	var res ModelClientConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
