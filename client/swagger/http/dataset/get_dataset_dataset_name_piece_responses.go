// Code generated by go-swagger; DO NOT EDIT.

package dataset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetDatasetDatasetNamePieceReader is a Reader for the GetDatasetDatasetNamePiece structure.
type GetDatasetDatasetNamePieceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDatasetDatasetNamePieceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDatasetDatasetNamePieceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDatasetDatasetNamePieceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDatasetDatasetNamePieceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /dataset/{datasetName}/piece] GetDatasetDatasetNamePiece", response, response.Code())
	}
}

// NewGetDatasetDatasetNamePieceOK creates a GetDatasetDatasetNamePieceOK with default headers values
func NewGetDatasetDatasetNamePieceOK() *GetDatasetDatasetNamePieceOK {
	return &GetDatasetDatasetNamePieceOK{}
}

/*
GetDatasetDatasetNamePieceOK describes a response with status code 200, with default header values.

OK
*/
type GetDatasetDatasetNamePieceOK struct {
	Payload []*models.ModelCar
}

// IsSuccess returns true when this get dataset dataset name piece o k response has a 2xx status code
func (o *GetDatasetDatasetNamePieceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get dataset dataset name piece o k response has a 3xx status code
func (o *GetDatasetDatasetNamePieceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataset dataset name piece o k response has a 4xx status code
func (o *GetDatasetDatasetNamePieceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dataset dataset name piece o k response has a 5xx status code
func (o *GetDatasetDatasetNamePieceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataset dataset name piece o k response a status code equal to that given
func (o *GetDatasetDatasetNamePieceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get dataset dataset name piece o k response
func (o *GetDatasetDatasetNamePieceOK) Code() int {
	return 200
}

func (o *GetDatasetDatasetNamePieceOK) Error() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/piece][%d] getDatasetDatasetNamePieceOK  %+v", 200, o.Payload)
}

func (o *GetDatasetDatasetNamePieceOK) String() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/piece][%d] getDatasetDatasetNamePieceOK  %+v", 200, o.Payload)
}

func (o *GetDatasetDatasetNamePieceOK) GetPayload() []*models.ModelCar {
	return o.Payload
}

func (o *GetDatasetDatasetNamePieceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatasetDatasetNamePieceBadRequest creates a GetDatasetDatasetNamePieceBadRequest with default headers values
func NewGetDatasetDatasetNamePieceBadRequest() *GetDatasetDatasetNamePieceBadRequest {
	return &GetDatasetDatasetNamePieceBadRequest{}
}

/*
GetDatasetDatasetNamePieceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDatasetDatasetNamePieceBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get dataset dataset name piece bad request response has a 2xx status code
func (o *GetDatasetDatasetNamePieceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataset dataset name piece bad request response has a 3xx status code
func (o *GetDatasetDatasetNamePieceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataset dataset name piece bad request response has a 4xx status code
func (o *GetDatasetDatasetNamePieceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataset dataset name piece bad request response has a 5xx status code
func (o *GetDatasetDatasetNamePieceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataset dataset name piece bad request response a status code equal to that given
func (o *GetDatasetDatasetNamePieceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get dataset dataset name piece bad request response
func (o *GetDatasetDatasetNamePieceBadRequest) Code() int {
	return 400
}

func (o *GetDatasetDatasetNamePieceBadRequest) Error() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/piece][%d] getDatasetDatasetNamePieceBadRequest  %+v", 400, o.Payload)
}

func (o *GetDatasetDatasetNamePieceBadRequest) String() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/piece][%d] getDatasetDatasetNamePieceBadRequest  %+v", 400, o.Payload)
}

func (o *GetDatasetDatasetNamePieceBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDatasetDatasetNamePieceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatasetDatasetNamePieceInternalServerError creates a GetDatasetDatasetNamePieceInternalServerError with default headers values
func NewGetDatasetDatasetNamePieceInternalServerError() *GetDatasetDatasetNamePieceInternalServerError {
	return &GetDatasetDatasetNamePieceInternalServerError{}
}

/*
GetDatasetDatasetNamePieceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDatasetDatasetNamePieceInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get dataset dataset name piece internal server error response has a 2xx status code
func (o *GetDatasetDatasetNamePieceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataset dataset name piece internal server error response has a 3xx status code
func (o *GetDatasetDatasetNamePieceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataset dataset name piece internal server error response has a 4xx status code
func (o *GetDatasetDatasetNamePieceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dataset dataset name piece internal server error response has a 5xx status code
func (o *GetDatasetDatasetNamePieceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get dataset dataset name piece internal server error response a status code equal to that given
func (o *GetDatasetDatasetNamePieceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get dataset dataset name piece internal server error response
func (o *GetDatasetDatasetNamePieceInternalServerError) Code() int {
	return 500
}

func (o *GetDatasetDatasetNamePieceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/piece][%d] getDatasetDatasetNamePieceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDatasetDatasetNamePieceInternalServerError) String() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/piece][%d] getDatasetDatasetNamePieceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDatasetDatasetNamePieceInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDatasetDatasetNamePieceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
