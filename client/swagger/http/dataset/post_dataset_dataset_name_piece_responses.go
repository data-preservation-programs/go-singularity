// Code generated by go-swagger; DO NOT EDIT.

package dataset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostDatasetDatasetNamePieceReader is a Reader for the PostDatasetDatasetNamePiece structure.
type PostDatasetDatasetNamePieceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDatasetDatasetNamePieceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDatasetDatasetNamePieceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDatasetDatasetNamePieceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDatasetDatasetNamePieceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /dataset/{datasetName}/piece] PostDatasetDatasetNamePiece", response, response.Code())
	}
}

// NewPostDatasetDatasetNamePieceOK creates a PostDatasetDatasetNamePieceOK with default headers values
func NewPostDatasetDatasetNamePieceOK() *PostDatasetDatasetNamePieceOK {
	return &PostDatasetDatasetNamePieceOK{}
}

/*
PostDatasetDatasetNamePieceOK describes a response with status code 200, with default header values.

OK
*/
type PostDatasetDatasetNamePieceOK struct {
	Payload *models.ModelCar
}

// IsSuccess returns true when this post dataset dataset name piece o k response has a 2xx status code
func (o *PostDatasetDatasetNamePieceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post dataset dataset name piece o k response has a 3xx status code
func (o *PostDatasetDatasetNamePieceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post dataset dataset name piece o k response has a 4xx status code
func (o *PostDatasetDatasetNamePieceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post dataset dataset name piece o k response has a 5xx status code
func (o *PostDatasetDatasetNamePieceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post dataset dataset name piece o k response a status code equal to that given
func (o *PostDatasetDatasetNamePieceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post dataset dataset name piece o k response
func (o *PostDatasetDatasetNamePieceOK) Code() int {
	return 200
}

func (o *PostDatasetDatasetNamePieceOK) Error() string {
	return fmt.Sprintf("[POST /dataset/{datasetName}/piece][%d] postDatasetDatasetNamePieceOK  %+v", 200, o.Payload)
}

func (o *PostDatasetDatasetNamePieceOK) String() string {
	return fmt.Sprintf("[POST /dataset/{datasetName}/piece][%d] postDatasetDatasetNamePieceOK  %+v", 200, o.Payload)
}

func (o *PostDatasetDatasetNamePieceOK) GetPayload() *models.ModelCar {
	return o.Payload
}

func (o *PostDatasetDatasetNamePieceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelCar)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDatasetDatasetNamePieceBadRequest creates a PostDatasetDatasetNamePieceBadRequest with default headers values
func NewPostDatasetDatasetNamePieceBadRequest() *PostDatasetDatasetNamePieceBadRequest {
	return &PostDatasetDatasetNamePieceBadRequest{}
}

/*
PostDatasetDatasetNamePieceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostDatasetDatasetNamePieceBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post dataset dataset name piece bad request response has a 2xx status code
func (o *PostDatasetDatasetNamePieceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post dataset dataset name piece bad request response has a 3xx status code
func (o *PostDatasetDatasetNamePieceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post dataset dataset name piece bad request response has a 4xx status code
func (o *PostDatasetDatasetNamePieceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post dataset dataset name piece bad request response has a 5xx status code
func (o *PostDatasetDatasetNamePieceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post dataset dataset name piece bad request response a status code equal to that given
func (o *PostDatasetDatasetNamePieceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post dataset dataset name piece bad request response
func (o *PostDatasetDatasetNamePieceBadRequest) Code() int {
	return 400
}

func (o *PostDatasetDatasetNamePieceBadRequest) Error() string {
	return fmt.Sprintf("[POST /dataset/{datasetName}/piece][%d] postDatasetDatasetNamePieceBadRequest  %+v", 400, o.Payload)
}

func (o *PostDatasetDatasetNamePieceBadRequest) String() string {
	return fmt.Sprintf("[POST /dataset/{datasetName}/piece][%d] postDatasetDatasetNamePieceBadRequest  %+v", 400, o.Payload)
}

func (o *PostDatasetDatasetNamePieceBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostDatasetDatasetNamePieceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDatasetDatasetNamePieceInternalServerError creates a PostDatasetDatasetNamePieceInternalServerError with default headers values
func NewPostDatasetDatasetNamePieceInternalServerError() *PostDatasetDatasetNamePieceInternalServerError {
	return &PostDatasetDatasetNamePieceInternalServerError{}
}

/*
PostDatasetDatasetNamePieceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostDatasetDatasetNamePieceInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post dataset dataset name piece internal server error response has a 2xx status code
func (o *PostDatasetDatasetNamePieceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post dataset dataset name piece internal server error response has a 3xx status code
func (o *PostDatasetDatasetNamePieceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post dataset dataset name piece internal server error response has a 4xx status code
func (o *PostDatasetDatasetNamePieceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post dataset dataset name piece internal server error response has a 5xx status code
func (o *PostDatasetDatasetNamePieceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post dataset dataset name piece internal server error response a status code equal to that given
func (o *PostDatasetDatasetNamePieceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post dataset dataset name piece internal server error response
func (o *PostDatasetDatasetNamePieceInternalServerError) Code() int {
	return 500
}

func (o *PostDatasetDatasetNamePieceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dataset/{datasetName}/piece][%d] postDatasetDatasetNamePieceInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDatasetDatasetNamePieceInternalServerError) String() string {
	return fmt.Sprintf("[POST /dataset/{datasetName}/piece][%d] postDatasetDatasetNamePieceInternalServerError  %+v", 500, o.Payload)
}

func (o *PostDatasetDatasetNamePieceInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostDatasetDatasetNamePieceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
