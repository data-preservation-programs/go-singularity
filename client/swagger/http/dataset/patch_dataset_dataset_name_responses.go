// Code generated by go-swagger; DO NOT EDIT.

package dataset

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PatchDatasetDatasetNameReader is a Reader for the PatchDatasetDatasetName structure.
type PatchDatasetDatasetNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchDatasetDatasetNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchDatasetDatasetNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchDatasetDatasetNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchDatasetDatasetNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /dataset/{datasetName}] PatchDatasetDatasetName", response, response.Code())
	}
}

// NewPatchDatasetDatasetNameOK creates a PatchDatasetDatasetNameOK with default headers values
func NewPatchDatasetDatasetNameOK() *PatchDatasetDatasetNameOK {
	return &PatchDatasetDatasetNameOK{}
}

/*
PatchDatasetDatasetNameOK describes a response with status code 200, with default header values.

OK
*/
type PatchDatasetDatasetNameOK struct {
	Payload *models.ModelDataset
}

// IsSuccess returns true when this patch dataset dataset name o k response has a 2xx status code
func (o *PatchDatasetDatasetNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch dataset dataset name o k response has a 3xx status code
func (o *PatchDatasetDatasetNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch dataset dataset name o k response has a 4xx status code
func (o *PatchDatasetDatasetNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch dataset dataset name o k response has a 5xx status code
func (o *PatchDatasetDatasetNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch dataset dataset name o k response a status code equal to that given
func (o *PatchDatasetDatasetNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch dataset dataset name o k response
func (o *PatchDatasetDatasetNameOK) Code() int {
	return 200
}

func (o *PatchDatasetDatasetNameOK) Error() string {
	return fmt.Sprintf("[PATCH /dataset/{datasetName}][%d] patchDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PatchDatasetDatasetNameOK) String() string {
	return fmt.Sprintf("[PATCH /dataset/{datasetName}][%d] patchDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PatchDatasetDatasetNameOK) GetPayload() *models.ModelDataset {
	return o.Payload
}

func (o *PatchDatasetDatasetNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelDataset)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDatasetDatasetNameBadRequest creates a PatchDatasetDatasetNameBadRequest with default headers values
func NewPatchDatasetDatasetNameBadRequest() *PatchDatasetDatasetNameBadRequest {
	return &PatchDatasetDatasetNameBadRequest{}
}

/*
PatchDatasetDatasetNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PatchDatasetDatasetNameBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this patch dataset dataset name bad request response has a 2xx status code
func (o *PatchDatasetDatasetNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch dataset dataset name bad request response has a 3xx status code
func (o *PatchDatasetDatasetNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch dataset dataset name bad request response has a 4xx status code
func (o *PatchDatasetDatasetNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch dataset dataset name bad request response has a 5xx status code
func (o *PatchDatasetDatasetNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch dataset dataset name bad request response a status code equal to that given
func (o *PatchDatasetDatasetNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the patch dataset dataset name bad request response
func (o *PatchDatasetDatasetNameBadRequest) Code() int {
	return 400
}

func (o *PatchDatasetDatasetNameBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /dataset/{datasetName}][%d] patchDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PatchDatasetDatasetNameBadRequest) String() string {
	return fmt.Sprintf("[PATCH /dataset/{datasetName}][%d] patchDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PatchDatasetDatasetNameBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PatchDatasetDatasetNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchDatasetDatasetNameInternalServerError creates a PatchDatasetDatasetNameInternalServerError with default headers values
func NewPatchDatasetDatasetNameInternalServerError() *PatchDatasetDatasetNameInternalServerError {
	return &PatchDatasetDatasetNameInternalServerError{}
}

/*
PatchDatasetDatasetNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchDatasetDatasetNameInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this patch dataset dataset name internal server error response has a 2xx status code
func (o *PatchDatasetDatasetNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch dataset dataset name internal server error response has a 3xx status code
func (o *PatchDatasetDatasetNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch dataset dataset name internal server error response has a 4xx status code
func (o *PatchDatasetDatasetNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch dataset dataset name internal server error response has a 5xx status code
func (o *PatchDatasetDatasetNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch dataset dataset name internal server error response a status code equal to that given
func (o *PatchDatasetDatasetNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the patch dataset dataset name internal server error response
func (o *PatchDatasetDatasetNameInternalServerError) Code() int {
	return 500
}

func (o *PatchDatasetDatasetNameInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /dataset/{datasetName}][%d] patchDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchDatasetDatasetNameInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /dataset/{datasetName}][%d] patchDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchDatasetDatasetNameInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PatchDatasetDatasetNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
