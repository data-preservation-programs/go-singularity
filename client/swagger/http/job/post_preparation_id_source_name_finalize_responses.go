// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostPreparationIDSourceNameFinalizeReader is a Reader for the PostPreparationIDSourceNameFinalize structure.
type PostPreparationIDSourceNameFinalizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPreparationIDSourceNameFinalizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostPreparationIDSourceNameFinalizeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPreparationIDSourceNameFinalizeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPreparationIDSourceNameFinalizeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/finalize] PostPreparationIDSourceNameFinalize", response, response.Code())
	}
}

// NewPostPreparationIDSourceNameFinalizeCreated creates a PostPreparationIDSourceNameFinalizeCreated with default headers values
func NewPostPreparationIDSourceNameFinalizeCreated() *PostPreparationIDSourceNameFinalizeCreated {
	return &PostPreparationIDSourceNameFinalizeCreated{}
}

/*
PostPreparationIDSourceNameFinalizeCreated describes a response with status code 201, with default header values.

Created
*/
type PostPreparationIDSourceNameFinalizeCreated struct {
}

// IsSuccess returns true when this post preparation Id source name finalize created response has a 2xx status code
func (o *PostPreparationIDSourceNameFinalizeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post preparation Id source name finalize created response has a 3xx status code
func (o *PostPreparationIDSourceNameFinalizeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name finalize created response has a 4xx status code
func (o *PostPreparationIDSourceNameFinalizeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name finalize created response has a 5xx status code
func (o *PostPreparationIDSourceNameFinalizeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name finalize created response a status code equal to that given
func (o *PostPreparationIDSourceNameFinalizeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post preparation Id source name finalize created response
func (o *PostPreparationIDSourceNameFinalizeCreated) Code() int {
	return 201
}

func (o *PostPreparationIDSourceNameFinalizeCreated) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] postPreparationIdSourceNameFinalizeCreated ", 201)
}

func (o *PostPreparationIDSourceNameFinalizeCreated) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] postPreparationIdSourceNameFinalizeCreated ", 201)
}

func (o *PostPreparationIDSourceNameFinalizeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostPreparationIDSourceNameFinalizeBadRequest creates a PostPreparationIDSourceNameFinalizeBadRequest with default headers values
func NewPostPreparationIDSourceNameFinalizeBadRequest() *PostPreparationIDSourceNameFinalizeBadRequest {
	return &PostPreparationIDSourceNameFinalizeBadRequest{}
}

/*
PostPreparationIDSourceNameFinalizeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPreparationIDSourceNameFinalizeBadRequest struct {
	Payload string
}

// IsSuccess returns true when this post preparation Id source name finalize bad request response has a 2xx status code
func (o *PostPreparationIDSourceNameFinalizeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name finalize bad request response has a 3xx status code
func (o *PostPreparationIDSourceNameFinalizeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name finalize bad request response has a 4xx status code
func (o *PostPreparationIDSourceNameFinalizeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post preparation Id source name finalize bad request response has a 5xx status code
func (o *PostPreparationIDSourceNameFinalizeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name finalize bad request response a status code equal to that given
func (o *PostPreparationIDSourceNameFinalizeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post preparation Id source name finalize bad request response
func (o *PostPreparationIDSourceNameFinalizeBadRequest) Code() int {
	return 400
}

func (o *PostPreparationIDSourceNameFinalizeBadRequest) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] postPreparationIdSourceNameFinalizeBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNameFinalizeBadRequest) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] postPreparationIdSourceNameFinalizeBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNameFinalizeBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PostPreparationIDSourceNameFinalizeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNameFinalizeInternalServerError creates a PostPreparationIDSourceNameFinalizeInternalServerError with default headers values
func NewPostPreparationIDSourceNameFinalizeInternalServerError() *PostPreparationIDSourceNameFinalizeInternalServerError {
	return &PostPreparationIDSourceNameFinalizeInternalServerError{}
}

/*
PostPreparationIDSourceNameFinalizeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostPreparationIDSourceNameFinalizeInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this post preparation Id source name finalize internal server error response has a 2xx status code
func (o *PostPreparationIDSourceNameFinalizeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name finalize internal server error response has a 3xx status code
func (o *PostPreparationIDSourceNameFinalizeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name finalize internal server error response has a 4xx status code
func (o *PostPreparationIDSourceNameFinalizeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name finalize internal server error response has a 5xx status code
func (o *PostPreparationIDSourceNameFinalizeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post preparation Id source name finalize internal server error response a status code equal to that given
func (o *PostPreparationIDSourceNameFinalizeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post preparation Id source name finalize internal server error response
func (o *PostPreparationIDSourceNameFinalizeInternalServerError) Code() int {
	return 500
}

func (o *PostPreparationIDSourceNameFinalizeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] postPreparationIdSourceNameFinalizeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNameFinalizeInternalServerError) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] postPreparationIdSourceNameFinalizeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNameFinalizeInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PostPreparationIDSourceNameFinalizeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
