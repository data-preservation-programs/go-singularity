// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// StartPackAllReader is a Reader for the StartPackAll structure.
type StartPackAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartPackAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartPackAllOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartPackAllBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartPackAllInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/start-pack] StartPackAll", response, response.Code())
	}
}

// NewStartPackAllOK creates a StartPackAllOK with default headers values
func NewStartPackAllOK() *StartPackAllOK {
	return &StartPackAllOK{}
}

/*
StartPackAllOK describes a response with status code 200, with default header values.

OK
*/
type StartPackAllOK struct {
	Payload *models.ModelJob
}

// IsSuccess returns true when this start pack all o k response has a 2xx status code
func (o *StartPackAllOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start pack all o k response has a 3xx status code
func (o *StartPackAllOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start pack all o k response has a 4xx status code
func (o *StartPackAllOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start pack all o k response has a 5xx status code
func (o *StartPackAllOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start pack all o k response a status code equal to that given
func (o *StartPackAllOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start pack all o k response
func (o *StartPackAllOK) Code() int {
	return 200
}

func (o *StartPackAllOK) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] startPackAllOK  %+v", 200, o.Payload)
}

func (o *StartPackAllOK) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] startPackAllOK  %+v", 200, o.Payload)
}

func (o *StartPackAllOK) GetPayload() *models.ModelJob {
	return o.Payload
}

func (o *StartPackAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartPackAllBadRequest creates a StartPackAllBadRequest with default headers values
func NewStartPackAllBadRequest() *StartPackAllBadRequest {
	return &StartPackAllBadRequest{}
}

/*
StartPackAllBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StartPackAllBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this start pack all bad request response has a 2xx status code
func (o *StartPackAllBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start pack all bad request response has a 3xx status code
func (o *StartPackAllBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start pack all bad request response has a 4xx status code
func (o *StartPackAllBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start pack all bad request response has a 5xx status code
func (o *StartPackAllBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start pack all bad request response a status code equal to that given
func (o *StartPackAllBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start pack all bad request response
func (o *StartPackAllBadRequest) Code() int {
	return 400
}

func (o *StartPackAllBadRequest) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] startPackAllBadRequest  %+v", 400, o.Payload)
}

func (o *StartPackAllBadRequest) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] startPackAllBadRequest  %+v", 400, o.Payload)
}

func (o *StartPackAllBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *StartPackAllBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartPackAllInternalServerError creates a StartPackAllInternalServerError with default headers values
func NewStartPackAllInternalServerError() *StartPackAllInternalServerError {
	return &StartPackAllInternalServerError{}
}

/*
StartPackAllInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type StartPackAllInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this start pack all internal server error response has a 2xx status code
func (o *StartPackAllInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start pack all internal server error response has a 3xx status code
func (o *StartPackAllInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start pack all internal server error response has a 4xx status code
func (o *StartPackAllInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start pack all internal server error response has a 5xx status code
func (o *StartPackAllInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start pack all internal server error response a status code equal to that given
func (o *StartPackAllInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start pack all internal server error response
func (o *StartPackAllInternalServerError) Code() int {
	return 500
}

func (o *StartPackAllInternalServerError) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] startPackAllInternalServerError  %+v", 500, o.Payload)
}

func (o *StartPackAllInternalServerError) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] startPackAllInternalServerError  %+v", 500, o.Payload)
}

func (o *StartPackAllInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *StartPackAllInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
