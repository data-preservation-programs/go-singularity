// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostPreparationIDSourceNamePausePackReader is a Reader for the PostPreparationIDSourceNamePausePack structure.
type PostPreparationIDSourceNamePausePackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPreparationIDSourceNamePausePackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPreparationIDSourceNamePausePackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPreparationIDSourceNamePausePackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPreparationIDSourceNamePausePackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/pause-pack] PostPreparationIDSourceNamePausePack", response, response.Code())
	}
}

// NewPostPreparationIDSourceNamePausePackOK creates a PostPreparationIDSourceNamePausePackOK with default headers values
func NewPostPreparationIDSourceNamePausePackOK() *PostPreparationIDSourceNamePausePackOK {
	return &PostPreparationIDSourceNamePausePackOK{}
}

/*
PostPreparationIDSourceNamePausePackOK describes a response with status code 200, with default header values.

OK
*/
type PostPreparationIDSourceNamePausePackOK struct {
	Payload *models.ModelJob
}

// IsSuccess returns true when this post preparation Id source name pause pack o k response has a 2xx status code
func (o *PostPreparationIDSourceNamePausePackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post preparation Id source name pause pack o k response has a 3xx status code
func (o *PostPreparationIDSourceNamePausePackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name pause pack o k response has a 4xx status code
func (o *PostPreparationIDSourceNamePausePackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name pause pack o k response has a 5xx status code
func (o *PostPreparationIDSourceNamePausePackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name pause pack o k response a status code equal to that given
func (o *PostPreparationIDSourceNamePausePackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post preparation Id source name pause pack o k response
func (o *PostPreparationIDSourceNamePausePackOK) Code() int {
	return 200
}

func (o *PostPreparationIDSourceNamePausePackOK) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-pack][%d] postPreparationIdSourceNamePausePackOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNamePausePackOK) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-pack][%d] postPreparationIdSourceNamePausePackOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNamePausePackOK) GetPayload() *models.ModelJob {
	return o.Payload
}

func (o *PostPreparationIDSourceNamePausePackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNamePausePackBadRequest creates a PostPreparationIDSourceNamePausePackBadRequest with default headers values
func NewPostPreparationIDSourceNamePausePackBadRequest() *PostPreparationIDSourceNamePausePackBadRequest {
	return &PostPreparationIDSourceNamePausePackBadRequest{}
}

/*
PostPreparationIDSourceNamePausePackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPreparationIDSourceNamePausePackBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name pause pack bad request response has a 2xx status code
func (o *PostPreparationIDSourceNamePausePackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name pause pack bad request response has a 3xx status code
func (o *PostPreparationIDSourceNamePausePackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name pause pack bad request response has a 4xx status code
func (o *PostPreparationIDSourceNamePausePackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post preparation Id source name pause pack bad request response has a 5xx status code
func (o *PostPreparationIDSourceNamePausePackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name pause pack bad request response a status code equal to that given
func (o *PostPreparationIDSourceNamePausePackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post preparation Id source name pause pack bad request response
func (o *PostPreparationIDSourceNamePausePackBadRequest) Code() int {
	return 400
}

func (o *PostPreparationIDSourceNamePausePackBadRequest) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-pack][%d] postPreparationIdSourceNamePausePackBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNamePausePackBadRequest) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-pack][%d] postPreparationIdSourceNamePausePackBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNamePausePackBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNamePausePackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNamePausePackInternalServerError creates a PostPreparationIDSourceNamePausePackInternalServerError with default headers values
func NewPostPreparationIDSourceNamePausePackInternalServerError() *PostPreparationIDSourceNamePausePackInternalServerError {
	return &PostPreparationIDSourceNamePausePackInternalServerError{}
}

/*
PostPreparationIDSourceNamePausePackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostPreparationIDSourceNamePausePackInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name pause pack internal server error response has a 2xx status code
func (o *PostPreparationIDSourceNamePausePackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name pause pack internal server error response has a 3xx status code
func (o *PostPreparationIDSourceNamePausePackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name pause pack internal server error response has a 4xx status code
func (o *PostPreparationIDSourceNamePausePackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name pause pack internal server error response has a 5xx status code
func (o *PostPreparationIDSourceNamePausePackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post preparation Id source name pause pack internal server error response a status code equal to that given
func (o *PostPreparationIDSourceNamePausePackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post preparation Id source name pause pack internal server error response
func (o *PostPreparationIDSourceNamePausePackInternalServerError) Code() int {
	return 500
}

func (o *PostPreparationIDSourceNamePausePackInternalServerError) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-pack][%d] postPreparationIdSourceNamePausePackInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNamePausePackInternalServerError) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-pack][%d] postPreparationIdSourceNamePausePackInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNamePausePackInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNamePausePackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
