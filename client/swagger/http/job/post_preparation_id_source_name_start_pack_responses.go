// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostPreparationIDSourceNameStartPackReader is a Reader for the PostPreparationIDSourceNameStartPack structure.
type PostPreparationIDSourceNameStartPackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPreparationIDSourceNameStartPackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPreparationIDSourceNameStartPackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPreparationIDSourceNameStartPackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPreparationIDSourceNameStartPackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/start-pack] PostPreparationIDSourceNameStartPack", response, response.Code())
	}
}

// NewPostPreparationIDSourceNameStartPackOK creates a PostPreparationIDSourceNameStartPackOK with default headers values
func NewPostPreparationIDSourceNameStartPackOK() *PostPreparationIDSourceNameStartPackOK {
	return &PostPreparationIDSourceNameStartPackOK{}
}

/*
PostPreparationIDSourceNameStartPackOK describes a response with status code 200, with default header values.

OK
*/
type PostPreparationIDSourceNameStartPackOK struct {
	Payload *models.ModelJob
}

// IsSuccess returns true when this post preparation Id source name start pack o k response has a 2xx status code
func (o *PostPreparationIDSourceNameStartPackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post preparation Id source name start pack o k response has a 3xx status code
func (o *PostPreparationIDSourceNameStartPackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name start pack o k response has a 4xx status code
func (o *PostPreparationIDSourceNameStartPackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name start pack o k response has a 5xx status code
func (o *PostPreparationIDSourceNameStartPackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name start pack o k response a status code equal to that given
func (o *PostPreparationIDSourceNameStartPackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post preparation Id source name start pack o k response
func (o *PostPreparationIDSourceNameStartPackOK) Code() int {
	return 200
}

func (o *PostPreparationIDSourceNameStartPackOK) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] postPreparationIdSourceNameStartPackOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNameStartPackOK) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] postPreparationIdSourceNameStartPackOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNameStartPackOK) GetPayload() *models.ModelJob {
	return o.Payload
}

func (o *PostPreparationIDSourceNameStartPackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNameStartPackBadRequest creates a PostPreparationIDSourceNameStartPackBadRequest with default headers values
func NewPostPreparationIDSourceNameStartPackBadRequest() *PostPreparationIDSourceNameStartPackBadRequest {
	return &PostPreparationIDSourceNameStartPackBadRequest{}
}

/*
PostPreparationIDSourceNameStartPackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPreparationIDSourceNameStartPackBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name start pack bad request response has a 2xx status code
func (o *PostPreparationIDSourceNameStartPackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name start pack bad request response has a 3xx status code
func (o *PostPreparationIDSourceNameStartPackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name start pack bad request response has a 4xx status code
func (o *PostPreparationIDSourceNameStartPackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post preparation Id source name start pack bad request response has a 5xx status code
func (o *PostPreparationIDSourceNameStartPackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name start pack bad request response a status code equal to that given
func (o *PostPreparationIDSourceNameStartPackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post preparation Id source name start pack bad request response
func (o *PostPreparationIDSourceNameStartPackBadRequest) Code() int {
	return 400
}

func (o *PostPreparationIDSourceNameStartPackBadRequest) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] postPreparationIdSourceNameStartPackBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNameStartPackBadRequest) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] postPreparationIdSourceNameStartPackBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNameStartPackBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNameStartPackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNameStartPackInternalServerError creates a PostPreparationIDSourceNameStartPackInternalServerError with default headers values
func NewPostPreparationIDSourceNameStartPackInternalServerError() *PostPreparationIDSourceNameStartPackInternalServerError {
	return &PostPreparationIDSourceNameStartPackInternalServerError{}
}

/*
PostPreparationIDSourceNameStartPackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostPreparationIDSourceNameStartPackInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name start pack internal server error response has a 2xx status code
func (o *PostPreparationIDSourceNameStartPackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name start pack internal server error response has a 3xx status code
func (o *PostPreparationIDSourceNameStartPackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name start pack internal server error response has a 4xx status code
func (o *PostPreparationIDSourceNameStartPackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name start pack internal server error response has a 5xx status code
func (o *PostPreparationIDSourceNameStartPackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post preparation Id source name start pack internal server error response a status code equal to that given
func (o *PostPreparationIDSourceNameStartPackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post preparation Id source name start pack internal server error response
func (o *PostPreparationIDSourceNameStartPackInternalServerError) Code() int {
	return 500
}

func (o *PostPreparationIDSourceNameStartPackInternalServerError) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] postPreparationIdSourceNameStartPackInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNameStartPackInternalServerError) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-pack][%d] postPreparationIdSourceNameStartPackInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNameStartPackInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNameStartPackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
