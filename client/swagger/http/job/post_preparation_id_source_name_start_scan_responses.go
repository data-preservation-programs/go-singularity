// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostPreparationIDSourceNameStartScanReader is a Reader for the PostPreparationIDSourceNameStartScan structure.
type PostPreparationIDSourceNameStartScanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPreparationIDSourceNameStartScanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPreparationIDSourceNameStartScanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPreparationIDSourceNameStartScanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPreparationIDSourceNameStartScanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/start-scan] PostPreparationIDSourceNameStartScan", response, response.Code())
	}
}

// NewPostPreparationIDSourceNameStartScanOK creates a PostPreparationIDSourceNameStartScanOK with default headers values
func NewPostPreparationIDSourceNameStartScanOK() *PostPreparationIDSourceNameStartScanOK {
	return &PostPreparationIDSourceNameStartScanOK{}
}

/*
PostPreparationIDSourceNameStartScanOK describes a response with status code 200, with default header values.

OK
*/
type PostPreparationIDSourceNameStartScanOK struct {
	Payload *models.ModelJob
}

// IsSuccess returns true when this post preparation Id source name start scan o k response has a 2xx status code
func (o *PostPreparationIDSourceNameStartScanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post preparation Id source name start scan o k response has a 3xx status code
func (o *PostPreparationIDSourceNameStartScanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name start scan o k response has a 4xx status code
func (o *PostPreparationIDSourceNameStartScanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name start scan o k response has a 5xx status code
func (o *PostPreparationIDSourceNameStartScanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name start scan o k response a status code equal to that given
func (o *PostPreparationIDSourceNameStartScanOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post preparation Id source name start scan o k response
func (o *PostPreparationIDSourceNameStartScanOK) Code() int {
	return 200
}

func (o *PostPreparationIDSourceNameStartScanOK) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-scan][%d] postPreparationIdSourceNameStartScanOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNameStartScanOK) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-scan][%d] postPreparationIdSourceNameStartScanOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNameStartScanOK) GetPayload() *models.ModelJob {
	return o.Payload
}

func (o *PostPreparationIDSourceNameStartScanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNameStartScanBadRequest creates a PostPreparationIDSourceNameStartScanBadRequest with default headers values
func NewPostPreparationIDSourceNameStartScanBadRequest() *PostPreparationIDSourceNameStartScanBadRequest {
	return &PostPreparationIDSourceNameStartScanBadRequest{}
}

/*
PostPreparationIDSourceNameStartScanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPreparationIDSourceNameStartScanBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name start scan bad request response has a 2xx status code
func (o *PostPreparationIDSourceNameStartScanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name start scan bad request response has a 3xx status code
func (o *PostPreparationIDSourceNameStartScanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name start scan bad request response has a 4xx status code
func (o *PostPreparationIDSourceNameStartScanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post preparation Id source name start scan bad request response has a 5xx status code
func (o *PostPreparationIDSourceNameStartScanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name start scan bad request response a status code equal to that given
func (o *PostPreparationIDSourceNameStartScanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post preparation Id source name start scan bad request response
func (o *PostPreparationIDSourceNameStartScanBadRequest) Code() int {
	return 400
}

func (o *PostPreparationIDSourceNameStartScanBadRequest) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-scan][%d] postPreparationIdSourceNameStartScanBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNameStartScanBadRequest) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-scan][%d] postPreparationIdSourceNameStartScanBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNameStartScanBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNameStartScanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNameStartScanInternalServerError creates a PostPreparationIDSourceNameStartScanInternalServerError with default headers values
func NewPostPreparationIDSourceNameStartScanInternalServerError() *PostPreparationIDSourceNameStartScanInternalServerError {
	return &PostPreparationIDSourceNameStartScanInternalServerError{}
}

/*
PostPreparationIDSourceNameStartScanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostPreparationIDSourceNameStartScanInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name start scan internal server error response has a 2xx status code
func (o *PostPreparationIDSourceNameStartScanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name start scan internal server error response has a 3xx status code
func (o *PostPreparationIDSourceNameStartScanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name start scan internal server error response has a 4xx status code
func (o *PostPreparationIDSourceNameStartScanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name start scan internal server error response has a 5xx status code
func (o *PostPreparationIDSourceNameStartScanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post preparation Id source name start scan internal server error response a status code equal to that given
func (o *PostPreparationIDSourceNameStartScanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post preparation Id source name start scan internal server error response
func (o *PostPreparationIDSourceNameStartScanInternalServerError) Code() int {
	return 500
}

func (o *PostPreparationIDSourceNameStartScanInternalServerError) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-scan][%d] postPreparationIdSourceNameStartScanInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNameStartScanInternalServerError) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/start-scan][%d] postPreparationIdSourceNameStartScanInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNameStartScanInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNameStartScanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
