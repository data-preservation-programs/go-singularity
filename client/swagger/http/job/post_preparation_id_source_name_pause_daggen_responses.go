// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostPreparationIDSourceNamePauseDaggenReader is a Reader for the PostPreparationIDSourceNamePauseDaggen structure.
type PostPreparationIDSourceNamePauseDaggenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPreparationIDSourceNamePauseDaggenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPreparationIDSourceNamePauseDaggenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPreparationIDSourceNamePauseDaggenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPreparationIDSourceNamePauseDaggenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/pause-daggen] PostPreparationIDSourceNamePauseDaggen", response, response.Code())
	}
}

// NewPostPreparationIDSourceNamePauseDaggenOK creates a PostPreparationIDSourceNamePauseDaggenOK with default headers values
func NewPostPreparationIDSourceNamePauseDaggenOK() *PostPreparationIDSourceNamePauseDaggenOK {
	return &PostPreparationIDSourceNamePauseDaggenOK{}
}

/*
PostPreparationIDSourceNamePauseDaggenOK describes a response with status code 200, with default header values.

OK
*/
type PostPreparationIDSourceNamePauseDaggenOK struct {
	Payload *models.ModelJob
}

// IsSuccess returns true when this post preparation Id source name pause daggen o k response has a 2xx status code
func (o *PostPreparationIDSourceNamePauseDaggenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post preparation Id source name pause daggen o k response has a 3xx status code
func (o *PostPreparationIDSourceNamePauseDaggenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name pause daggen o k response has a 4xx status code
func (o *PostPreparationIDSourceNamePauseDaggenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name pause daggen o k response has a 5xx status code
func (o *PostPreparationIDSourceNamePauseDaggenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name pause daggen o k response a status code equal to that given
func (o *PostPreparationIDSourceNamePauseDaggenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post preparation Id source name pause daggen o k response
func (o *PostPreparationIDSourceNamePauseDaggenOK) Code() int {
	return 200
}

func (o *PostPreparationIDSourceNamePauseDaggenOK) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-daggen][%d] postPreparationIdSourceNamePauseDaggenOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNamePauseDaggenOK) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-daggen][%d] postPreparationIdSourceNamePauseDaggenOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNamePauseDaggenOK) GetPayload() *models.ModelJob {
	return o.Payload
}

func (o *PostPreparationIDSourceNamePauseDaggenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNamePauseDaggenBadRequest creates a PostPreparationIDSourceNamePauseDaggenBadRequest with default headers values
func NewPostPreparationIDSourceNamePauseDaggenBadRequest() *PostPreparationIDSourceNamePauseDaggenBadRequest {
	return &PostPreparationIDSourceNamePauseDaggenBadRequest{}
}

/*
PostPreparationIDSourceNamePauseDaggenBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPreparationIDSourceNamePauseDaggenBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name pause daggen bad request response has a 2xx status code
func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name pause daggen bad request response has a 3xx status code
func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name pause daggen bad request response has a 4xx status code
func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post preparation Id source name pause daggen bad request response has a 5xx status code
func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name pause daggen bad request response a status code equal to that given
func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post preparation Id source name pause daggen bad request response
func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) Code() int {
	return 400
}

func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-daggen][%d] postPreparationIdSourceNamePauseDaggenBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-daggen][%d] postPreparationIdSourceNamePauseDaggenBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNamePauseDaggenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNamePauseDaggenInternalServerError creates a PostPreparationIDSourceNamePauseDaggenInternalServerError with default headers values
func NewPostPreparationIDSourceNamePauseDaggenInternalServerError() *PostPreparationIDSourceNamePauseDaggenInternalServerError {
	return &PostPreparationIDSourceNamePauseDaggenInternalServerError{}
}

/*
PostPreparationIDSourceNamePauseDaggenInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostPreparationIDSourceNamePauseDaggenInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name pause daggen internal server error response has a 2xx status code
func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name pause daggen internal server error response has a 3xx status code
func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name pause daggen internal server error response has a 4xx status code
func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name pause daggen internal server error response has a 5xx status code
func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post preparation Id source name pause daggen internal server error response a status code equal to that given
func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post preparation Id source name pause daggen internal server error response
func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) Code() int {
	return 500
}

func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-daggen][%d] postPreparationIdSourceNamePauseDaggenInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/pause-daggen][%d] postPreparationIdSourceNamePauseDaggenInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNamePauseDaggenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
