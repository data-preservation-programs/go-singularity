// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PrepareToPackSourceReader is a Reader for the PrepareToPackSource structure.
type PrepareToPackSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PrepareToPackSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPrepareToPackSourceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPrepareToPackSourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPrepareToPackSourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/finalize] PrepareToPackSource", response, response.Code())
	}
}

// NewPrepareToPackSourceCreated creates a PrepareToPackSourceCreated with default headers values
func NewPrepareToPackSourceCreated() *PrepareToPackSourceCreated {
	return &PrepareToPackSourceCreated{}
}

/*
PrepareToPackSourceCreated describes a response with status code 201, with default header values.

Created
*/
type PrepareToPackSourceCreated struct {
}

// IsSuccess returns true when this prepare to pack source created response has a 2xx status code
func (o *PrepareToPackSourceCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this prepare to pack source created response has a 3xx status code
func (o *PrepareToPackSourceCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prepare to pack source created response has a 4xx status code
func (o *PrepareToPackSourceCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this prepare to pack source created response has a 5xx status code
func (o *PrepareToPackSourceCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this prepare to pack source created response a status code equal to that given
func (o *PrepareToPackSourceCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the prepare to pack source created response
func (o *PrepareToPackSourceCreated) Code() int {
	return 201
}

func (o *PrepareToPackSourceCreated) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] prepareToPackSourceCreated ", 201)
}

func (o *PrepareToPackSourceCreated) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] prepareToPackSourceCreated ", 201)
}

func (o *PrepareToPackSourceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPrepareToPackSourceBadRequest creates a PrepareToPackSourceBadRequest with default headers values
func NewPrepareToPackSourceBadRequest() *PrepareToPackSourceBadRequest {
	return &PrepareToPackSourceBadRequest{}
}

/*
PrepareToPackSourceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PrepareToPackSourceBadRequest struct {
	Payload string
}

// IsSuccess returns true when this prepare to pack source bad request response has a 2xx status code
func (o *PrepareToPackSourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prepare to pack source bad request response has a 3xx status code
func (o *PrepareToPackSourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prepare to pack source bad request response has a 4xx status code
func (o *PrepareToPackSourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this prepare to pack source bad request response has a 5xx status code
func (o *PrepareToPackSourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this prepare to pack source bad request response a status code equal to that given
func (o *PrepareToPackSourceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the prepare to pack source bad request response
func (o *PrepareToPackSourceBadRequest) Code() int {
	return 400
}

func (o *PrepareToPackSourceBadRequest) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] prepareToPackSourceBadRequest  %+v", 400, o.Payload)
}

func (o *PrepareToPackSourceBadRequest) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] prepareToPackSourceBadRequest  %+v", 400, o.Payload)
}

func (o *PrepareToPackSourceBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PrepareToPackSourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrepareToPackSourceInternalServerError creates a PrepareToPackSourceInternalServerError with default headers values
func NewPrepareToPackSourceInternalServerError() *PrepareToPackSourceInternalServerError {
	return &PrepareToPackSourceInternalServerError{}
}

/*
PrepareToPackSourceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PrepareToPackSourceInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this prepare to pack source internal server error response has a 2xx status code
func (o *PrepareToPackSourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prepare to pack source internal server error response has a 3xx status code
func (o *PrepareToPackSourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prepare to pack source internal server error response has a 4xx status code
func (o *PrepareToPackSourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this prepare to pack source internal server error response has a 5xx status code
func (o *PrepareToPackSourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this prepare to pack source internal server error response a status code equal to that given
func (o *PrepareToPackSourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the prepare to pack source internal server error response
func (o *PrepareToPackSourceInternalServerError) Code() int {
	return 500
}

func (o *PrepareToPackSourceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] prepareToPackSourceInternalServerError  %+v", 500, o.Payload)
}

func (o *PrepareToPackSourceInternalServerError) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/finalize][%d] prepareToPackSourceInternalServerError  %+v", 500, o.Payload)
}

func (o *PrepareToPackSourceInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PrepareToPackSourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
