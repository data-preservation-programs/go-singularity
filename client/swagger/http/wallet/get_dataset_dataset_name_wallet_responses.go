// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetDatasetDatasetNameWalletReader is a Reader for the GetDatasetDatasetNameWallet structure.
type GetDatasetDatasetNameWalletReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDatasetDatasetNameWalletReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDatasetDatasetNameWalletOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDatasetDatasetNameWalletBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDatasetDatasetNameWalletInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /dataset/{datasetName}/wallet] GetDatasetDatasetNameWallet", response, response.Code())
	}
}

// NewGetDatasetDatasetNameWalletOK creates a GetDatasetDatasetNameWalletOK with default headers values
func NewGetDatasetDatasetNameWalletOK() *GetDatasetDatasetNameWalletOK {
	return &GetDatasetDatasetNameWalletOK{}
}

/*
GetDatasetDatasetNameWalletOK describes a response with status code 200, with default header values.

OK
*/
type GetDatasetDatasetNameWalletOK struct {
	Payload []*models.ModelWallet
}

// IsSuccess returns true when this get dataset dataset name wallet o k response has a 2xx status code
func (o *GetDatasetDatasetNameWalletOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get dataset dataset name wallet o k response has a 3xx status code
func (o *GetDatasetDatasetNameWalletOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataset dataset name wallet o k response has a 4xx status code
func (o *GetDatasetDatasetNameWalletOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dataset dataset name wallet o k response has a 5xx status code
func (o *GetDatasetDatasetNameWalletOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataset dataset name wallet o k response a status code equal to that given
func (o *GetDatasetDatasetNameWalletOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get dataset dataset name wallet o k response
func (o *GetDatasetDatasetNameWalletOK) Code() int {
	return 200
}

func (o *GetDatasetDatasetNameWalletOK) Error() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/wallet][%d] getDatasetDatasetNameWalletOK  %+v", 200, o.Payload)
}

func (o *GetDatasetDatasetNameWalletOK) String() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/wallet][%d] getDatasetDatasetNameWalletOK  %+v", 200, o.Payload)
}

func (o *GetDatasetDatasetNameWalletOK) GetPayload() []*models.ModelWallet {
	return o.Payload
}

func (o *GetDatasetDatasetNameWalletOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatasetDatasetNameWalletBadRequest creates a GetDatasetDatasetNameWalletBadRequest with default headers values
func NewGetDatasetDatasetNameWalletBadRequest() *GetDatasetDatasetNameWalletBadRequest {
	return &GetDatasetDatasetNameWalletBadRequest{}
}

/*
GetDatasetDatasetNameWalletBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDatasetDatasetNameWalletBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get dataset dataset name wallet bad request response has a 2xx status code
func (o *GetDatasetDatasetNameWalletBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataset dataset name wallet bad request response has a 3xx status code
func (o *GetDatasetDatasetNameWalletBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataset dataset name wallet bad request response has a 4xx status code
func (o *GetDatasetDatasetNameWalletBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dataset dataset name wallet bad request response has a 5xx status code
func (o *GetDatasetDatasetNameWalletBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get dataset dataset name wallet bad request response a status code equal to that given
func (o *GetDatasetDatasetNameWalletBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get dataset dataset name wallet bad request response
func (o *GetDatasetDatasetNameWalletBadRequest) Code() int {
	return 400
}

func (o *GetDatasetDatasetNameWalletBadRequest) Error() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/wallet][%d] getDatasetDatasetNameWalletBadRequest  %+v", 400, o.Payload)
}

func (o *GetDatasetDatasetNameWalletBadRequest) String() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/wallet][%d] getDatasetDatasetNameWalletBadRequest  %+v", 400, o.Payload)
}

func (o *GetDatasetDatasetNameWalletBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDatasetDatasetNameWalletBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatasetDatasetNameWalletInternalServerError creates a GetDatasetDatasetNameWalletInternalServerError with default headers values
func NewGetDatasetDatasetNameWalletInternalServerError() *GetDatasetDatasetNameWalletInternalServerError {
	return &GetDatasetDatasetNameWalletInternalServerError{}
}

/*
GetDatasetDatasetNameWalletInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDatasetDatasetNameWalletInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get dataset dataset name wallet internal server error response has a 2xx status code
func (o *GetDatasetDatasetNameWalletInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dataset dataset name wallet internal server error response has a 3xx status code
func (o *GetDatasetDatasetNameWalletInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dataset dataset name wallet internal server error response has a 4xx status code
func (o *GetDatasetDatasetNameWalletInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dataset dataset name wallet internal server error response has a 5xx status code
func (o *GetDatasetDatasetNameWalletInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get dataset dataset name wallet internal server error response a status code equal to that given
func (o *GetDatasetDatasetNameWalletInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get dataset dataset name wallet internal server error response
func (o *GetDatasetDatasetNameWalletInternalServerError) Code() int {
	return 500
}

func (o *GetDatasetDatasetNameWalletInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/wallet][%d] getDatasetDatasetNameWalletInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDatasetDatasetNameWalletInternalServerError) String() string {
	return fmt.Sprintf("[GET /dataset/{datasetName}/wallet][%d] getDatasetDatasetNameWalletInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDatasetDatasetNameWalletInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetDatasetDatasetNameWalletInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
