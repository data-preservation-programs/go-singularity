// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostWalletRemoteReader is a Reader for the PostWalletRemote structure.
type PostWalletRemoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostWalletRemoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostWalletRemoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostWalletRemoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostWalletRemoteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /wallet/remote] PostWalletRemote", response, response.Code())
	}
}

// NewPostWalletRemoteOK creates a PostWalletRemoteOK with default headers values
func NewPostWalletRemoteOK() *PostWalletRemoteOK {
	return &PostWalletRemoteOK{}
}

/*
PostWalletRemoteOK describes a response with status code 200, with default header values.

OK
*/
type PostWalletRemoteOK struct {
	Payload *models.ModelWallet
}

// IsSuccess returns true when this post wallet remote o k response has a 2xx status code
func (o *PostWalletRemoteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post wallet remote o k response has a 3xx status code
func (o *PostWalletRemoteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post wallet remote o k response has a 4xx status code
func (o *PostWalletRemoteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post wallet remote o k response has a 5xx status code
func (o *PostWalletRemoteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post wallet remote o k response a status code equal to that given
func (o *PostWalletRemoteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post wallet remote o k response
func (o *PostWalletRemoteOK) Code() int {
	return 200
}

func (o *PostWalletRemoteOK) Error() string {
	return fmt.Sprintf("[POST /wallet/remote][%d] postWalletRemoteOK  %+v", 200, o.Payload)
}

func (o *PostWalletRemoteOK) String() string {
	return fmt.Sprintf("[POST /wallet/remote][%d] postWalletRemoteOK  %+v", 200, o.Payload)
}

func (o *PostWalletRemoteOK) GetPayload() *models.ModelWallet {
	return o.Payload
}

func (o *PostWalletRemoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelWallet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWalletRemoteBadRequest creates a PostWalletRemoteBadRequest with default headers values
func NewPostWalletRemoteBadRequest() *PostWalletRemoteBadRequest {
	return &PostWalletRemoteBadRequest{}
}

/*
PostWalletRemoteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostWalletRemoteBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post wallet remote bad request response has a 2xx status code
func (o *PostWalletRemoteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post wallet remote bad request response has a 3xx status code
func (o *PostWalletRemoteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post wallet remote bad request response has a 4xx status code
func (o *PostWalletRemoteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post wallet remote bad request response has a 5xx status code
func (o *PostWalletRemoteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post wallet remote bad request response a status code equal to that given
func (o *PostWalletRemoteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post wallet remote bad request response
func (o *PostWalletRemoteBadRequest) Code() int {
	return 400
}

func (o *PostWalletRemoteBadRequest) Error() string {
	return fmt.Sprintf("[POST /wallet/remote][%d] postWalletRemoteBadRequest  %+v", 400, o.Payload)
}

func (o *PostWalletRemoteBadRequest) String() string {
	return fmt.Sprintf("[POST /wallet/remote][%d] postWalletRemoteBadRequest  %+v", 400, o.Payload)
}

func (o *PostWalletRemoteBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostWalletRemoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWalletRemoteInternalServerError creates a PostWalletRemoteInternalServerError with default headers values
func NewPostWalletRemoteInternalServerError() *PostWalletRemoteInternalServerError {
	return &PostWalletRemoteInternalServerError{}
}

/*
PostWalletRemoteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostWalletRemoteInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post wallet remote internal server error response has a 2xx status code
func (o *PostWalletRemoteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post wallet remote internal server error response has a 3xx status code
func (o *PostWalletRemoteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post wallet remote internal server error response has a 4xx status code
func (o *PostWalletRemoteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post wallet remote internal server error response has a 5xx status code
func (o *PostWalletRemoteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post wallet remote internal server error response a status code equal to that given
func (o *PostWalletRemoteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post wallet remote internal server error response
func (o *PostWalletRemoteInternalServerError) Code() int {
	return 500
}

func (o *PostWalletRemoteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /wallet/remote][%d] postWalletRemoteInternalServerError  %+v", 500, o.Payload)
}

func (o *PostWalletRemoteInternalServerError) String() string {
	return fmt.Sprintf("[POST /wallet/remote][%d] postWalletRemoteInternalServerError  %+v", 500, o.Payload)
}

func (o *PostWalletRemoteInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostWalletRemoteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
