// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetWalletReader is a Reader for the GetWallet structure.
type GetWalletReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWalletReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWalletOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWalletBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWalletInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /wallet] GetWallet", response, response.Code())
	}
}

// NewGetWalletOK creates a GetWalletOK with default headers values
func NewGetWalletOK() *GetWalletOK {
	return &GetWalletOK{}
}

/*
GetWalletOK describes a response with status code 200, with default header values.

OK
*/
type GetWalletOK struct {
	Payload []*models.ModelWallet
}

// IsSuccess returns true when this get wallet o k response has a 2xx status code
func (o *GetWalletOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get wallet o k response has a 3xx status code
func (o *GetWalletOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet o k response has a 4xx status code
func (o *GetWalletOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wallet o k response has a 5xx status code
func (o *GetWalletOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallet o k response a status code equal to that given
func (o *GetWalletOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get wallet o k response
func (o *GetWalletOK) Code() int {
	return 200
}

func (o *GetWalletOK) Error() string {
	return fmt.Sprintf("[GET /wallet][%d] getWalletOK  %+v", 200, o.Payload)
}

func (o *GetWalletOK) String() string {
	return fmt.Sprintf("[GET /wallet][%d] getWalletOK  %+v", 200, o.Payload)
}

func (o *GetWalletOK) GetPayload() []*models.ModelWallet {
	return o.Payload
}

func (o *GetWalletOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletBadRequest creates a GetWalletBadRequest with default headers values
func NewGetWalletBadRequest() *GetWalletBadRequest {
	return &GetWalletBadRequest{}
}

/*
GetWalletBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetWalletBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get wallet bad request response has a 2xx status code
func (o *GetWalletBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallet bad request response has a 3xx status code
func (o *GetWalletBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet bad request response has a 4xx status code
func (o *GetWalletBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wallet bad request response has a 5xx status code
func (o *GetWalletBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallet bad request response a status code equal to that given
func (o *GetWalletBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get wallet bad request response
func (o *GetWalletBadRequest) Code() int {
	return 400
}

func (o *GetWalletBadRequest) Error() string {
	return fmt.Sprintf("[GET /wallet][%d] getWalletBadRequest  %+v", 400, o.Payload)
}

func (o *GetWalletBadRequest) String() string {
	return fmt.Sprintf("[GET /wallet][%d] getWalletBadRequest  %+v", 400, o.Payload)
}

func (o *GetWalletBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetWalletBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletInternalServerError creates a GetWalletInternalServerError with default headers values
func NewGetWalletInternalServerError() *GetWalletInternalServerError {
	return &GetWalletInternalServerError{}
}

/*
GetWalletInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetWalletInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get wallet internal server error response has a 2xx status code
func (o *GetWalletInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallet internal server error response has a 3xx status code
func (o *GetWalletInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet internal server error response has a 4xx status code
func (o *GetWalletInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wallet internal server error response has a 5xx status code
func (o *GetWalletInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get wallet internal server error response a status code equal to that given
func (o *GetWalletInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get wallet internal server error response
func (o *GetWalletInternalServerError) Code() int {
	return 500
}

func (o *GetWalletInternalServerError) Error() string {
	return fmt.Sprintf("[GET /wallet][%d] getWalletInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWalletInternalServerError) String() string {
	return fmt.Sprintf("[GET /wallet][%d] getWalletInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWalletInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetWalletInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
