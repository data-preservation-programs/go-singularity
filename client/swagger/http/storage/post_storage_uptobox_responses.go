// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageUptoboxReader is a Reader for the PostStorageUptobox structure.
type PostStorageUptoboxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageUptoboxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageUptoboxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageUptoboxBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageUptoboxInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/uptobox] PostStorageUptobox", response, response.Code())
	}
}

// NewPostStorageUptoboxOK creates a PostStorageUptoboxOK with default headers values
func NewPostStorageUptoboxOK() *PostStorageUptoboxOK {
	return &PostStorageUptoboxOK{}
}

/*
PostStorageUptoboxOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageUptoboxOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage uptobox o k response has a 2xx status code
func (o *PostStorageUptoboxOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage uptobox o k response has a 3xx status code
func (o *PostStorageUptoboxOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage uptobox o k response has a 4xx status code
func (o *PostStorageUptoboxOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage uptobox o k response has a 5xx status code
func (o *PostStorageUptoboxOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage uptobox o k response a status code equal to that given
func (o *PostStorageUptoboxOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage uptobox o k response
func (o *PostStorageUptoboxOK) Code() int {
	return 200
}

func (o *PostStorageUptoboxOK) Error() string {
	return fmt.Sprintf("[POST /storage/uptobox][%d] postStorageUptoboxOK  %+v", 200, o.Payload)
}

func (o *PostStorageUptoboxOK) String() string {
	return fmt.Sprintf("[POST /storage/uptobox][%d] postStorageUptoboxOK  %+v", 200, o.Payload)
}

func (o *PostStorageUptoboxOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageUptoboxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageUptoboxBadRequest creates a PostStorageUptoboxBadRequest with default headers values
func NewPostStorageUptoboxBadRequest() *PostStorageUptoboxBadRequest {
	return &PostStorageUptoboxBadRequest{}
}

/*
PostStorageUptoboxBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageUptoboxBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage uptobox bad request response has a 2xx status code
func (o *PostStorageUptoboxBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage uptobox bad request response has a 3xx status code
func (o *PostStorageUptoboxBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage uptobox bad request response has a 4xx status code
func (o *PostStorageUptoboxBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage uptobox bad request response has a 5xx status code
func (o *PostStorageUptoboxBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage uptobox bad request response a status code equal to that given
func (o *PostStorageUptoboxBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage uptobox bad request response
func (o *PostStorageUptoboxBadRequest) Code() int {
	return 400
}

func (o *PostStorageUptoboxBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/uptobox][%d] postStorageUptoboxBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageUptoboxBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/uptobox][%d] postStorageUptoboxBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageUptoboxBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageUptoboxBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageUptoboxInternalServerError creates a PostStorageUptoboxInternalServerError with default headers values
func NewPostStorageUptoboxInternalServerError() *PostStorageUptoboxInternalServerError {
	return &PostStorageUptoboxInternalServerError{}
}

/*
PostStorageUptoboxInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageUptoboxInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage uptobox internal server error response has a 2xx status code
func (o *PostStorageUptoboxInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage uptobox internal server error response has a 3xx status code
func (o *PostStorageUptoboxInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage uptobox internal server error response has a 4xx status code
func (o *PostStorageUptoboxInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage uptobox internal server error response has a 5xx status code
func (o *PostStorageUptoboxInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage uptobox internal server error response a status code equal to that given
func (o *PostStorageUptoboxInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage uptobox internal server error response
func (o *PostStorageUptoboxInternalServerError) Code() int {
	return 500
}

func (o *PostStorageUptoboxInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/uptobox][%d] postStorageUptoboxInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageUptoboxInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/uptobox][%d] postStorageUptoboxInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageUptoboxInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageUptoboxInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
