// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageS3MinioReader is a Reader for the PostStorageS3Minio structure.
type PostStorageS3MinioReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageS3MinioReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageS3MinioOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageS3MinioBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageS3MinioInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/s3/minio] PostStorageS3Minio", response, response.Code())
	}
}

// NewPostStorageS3MinioOK creates a PostStorageS3MinioOK with default headers values
func NewPostStorageS3MinioOK() *PostStorageS3MinioOK {
	return &PostStorageS3MinioOK{}
}

/*
PostStorageS3MinioOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageS3MinioOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage s3 minio o k response has a 2xx status code
func (o *PostStorageS3MinioOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage s3 minio o k response has a 3xx status code
func (o *PostStorageS3MinioOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 minio o k response has a 4xx status code
func (o *PostStorageS3MinioOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 minio o k response has a 5xx status code
func (o *PostStorageS3MinioOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 minio o k response a status code equal to that given
func (o *PostStorageS3MinioOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage s3 minio o k response
func (o *PostStorageS3MinioOK) Code() int {
	return 200
}

func (o *PostStorageS3MinioOK) Error() string {
	return fmt.Sprintf("[POST /storage/s3/minio][%d] postStorageS3MinioOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3MinioOK) String() string {
	return fmt.Sprintf("[POST /storage/s3/minio][%d] postStorageS3MinioOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3MinioOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageS3MinioOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3MinioBadRequest creates a PostStorageS3MinioBadRequest with default headers values
func NewPostStorageS3MinioBadRequest() *PostStorageS3MinioBadRequest {
	return &PostStorageS3MinioBadRequest{}
}

/*
PostStorageS3MinioBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageS3MinioBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 minio bad request response has a 2xx status code
func (o *PostStorageS3MinioBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 minio bad request response has a 3xx status code
func (o *PostStorageS3MinioBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 minio bad request response has a 4xx status code
func (o *PostStorageS3MinioBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage s3 minio bad request response has a 5xx status code
func (o *PostStorageS3MinioBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 minio bad request response a status code equal to that given
func (o *PostStorageS3MinioBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage s3 minio bad request response
func (o *PostStorageS3MinioBadRequest) Code() int {
	return 400
}

func (o *PostStorageS3MinioBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/s3/minio][%d] postStorageS3MinioBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3MinioBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/s3/minio][%d] postStorageS3MinioBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3MinioBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3MinioBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3MinioInternalServerError creates a PostStorageS3MinioInternalServerError with default headers values
func NewPostStorageS3MinioInternalServerError() *PostStorageS3MinioInternalServerError {
	return &PostStorageS3MinioInternalServerError{}
}

/*
PostStorageS3MinioInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageS3MinioInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 minio internal server error response has a 2xx status code
func (o *PostStorageS3MinioInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 minio internal server error response has a 3xx status code
func (o *PostStorageS3MinioInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 minio internal server error response has a 4xx status code
func (o *PostStorageS3MinioInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 minio internal server error response has a 5xx status code
func (o *PostStorageS3MinioInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage s3 minio internal server error response a status code equal to that given
func (o *PostStorageS3MinioInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage s3 minio internal server error response
func (o *PostStorageS3MinioInternalServerError) Code() int {
	return 500
}

func (o *PostStorageS3MinioInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/s3/minio][%d] postStorageS3MinioInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3MinioInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/s3/minio][%d] postStorageS3MinioInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3MinioInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3MinioInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
