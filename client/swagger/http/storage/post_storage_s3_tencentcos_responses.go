// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageS3TencentcosReader is a Reader for the PostStorageS3Tencentcos structure.
type PostStorageS3TencentcosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageS3TencentcosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageS3TencentcosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageS3TencentcosBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageS3TencentcosInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/s3/tencentcos] PostStorageS3Tencentcos", response, response.Code())
	}
}

// NewPostStorageS3TencentcosOK creates a PostStorageS3TencentcosOK with default headers values
func NewPostStorageS3TencentcosOK() *PostStorageS3TencentcosOK {
	return &PostStorageS3TencentcosOK{}
}

/*
PostStorageS3TencentcosOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageS3TencentcosOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage s3 tencentcos o k response has a 2xx status code
func (o *PostStorageS3TencentcosOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage s3 tencentcos o k response has a 3xx status code
func (o *PostStorageS3TencentcosOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 tencentcos o k response has a 4xx status code
func (o *PostStorageS3TencentcosOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 tencentcos o k response has a 5xx status code
func (o *PostStorageS3TencentcosOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 tencentcos o k response a status code equal to that given
func (o *PostStorageS3TencentcosOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage s3 tencentcos o k response
func (o *PostStorageS3TencentcosOK) Code() int {
	return 200
}

func (o *PostStorageS3TencentcosOK) Error() string {
	return fmt.Sprintf("[POST /storage/s3/tencentcos][%d] postStorageS3TencentcosOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3TencentcosOK) String() string {
	return fmt.Sprintf("[POST /storage/s3/tencentcos][%d] postStorageS3TencentcosOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3TencentcosOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageS3TencentcosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3TencentcosBadRequest creates a PostStorageS3TencentcosBadRequest with default headers values
func NewPostStorageS3TencentcosBadRequest() *PostStorageS3TencentcosBadRequest {
	return &PostStorageS3TencentcosBadRequest{}
}

/*
PostStorageS3TencentcosBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageS3TencentcosBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 tencentcos bad request response has a 2xx status code
func (o *PostStorageS3TencentcosBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 tencentcos bad request response has a 3xx status code
func (o *PostStorageS3TencentcosBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 tencentcos bad request response has a 4xx status code
func (o *PostStorageS3TencentcosBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage s3 tencentcos bad request response has a 5xx status code
func (o *PostStorageS3TencentcosBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 tencentcos bad request response a status code equal to that given
func (o *PostStorageS3TencentcosBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage s3 tencentcos bad request response
func (o *PostStorageS3TencentcosBadRequest) Code() int {
	return 400
}

func (o *PostStorageS3TencentcosBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/s3/tencentcos][%d] postStorageS3TencentcosBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3TencentcosBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/s3/tencentcos][%d] postStorageS3TencentcosBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3TencentcosBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3TencentcosBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3TencentcosInternalServerError creates a PostStorageS3TencentcosInternalServerError with default headers values
func NewPostStorageS3TencentcosInternalServerError() *PostStorageS3TencentcosInternalServerError {
	return &PostStorageS3TencentcosInternalServerError{}
}

/*
PostStorageS3TencentcosInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageS3TencentcosInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 tencentcos internal server error response has a 2xx status code
func (o *PostStorageS3TencentcosInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 tencentcos internal server error response has a 3xx status code
func (o *PostStorageS3TencentcosInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 tencentcos internal server error response has a 4xx status code
func (o *PostStorageS3TencentcosInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 tencentcos internal server error response has a 5xx status code
func (o *PostStorageS3TencentcosInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage s3 tencentcos internal server error response a status code equal to that given
func (o *PostStorageS3TencentcosInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage s3 tencentcos internal server error response
func (o *PostStorageS3TencentcosInternalServerError) Code() int {
	return 500
}

func (o *PostStorageS3TencentcosInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/s3/tencentcos][%d] postStorageS3TencentcosInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3TencentcosInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/s3/tencentcos][%d] postStorageS3TencentcosInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3TencentcosInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3TencentcosInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
