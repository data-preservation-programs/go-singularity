// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageKoofrDigistorageReader is a Reader for the PostStorageKoofrDigistorage structure.
type PostStorageKoofrDigistorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageKoofrDigistorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageKoofrDigistorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageKoofrDigistorageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageKoofrDigistorageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/koofr/digistorage] PostStorageKoofrDigistorage", response, response.Code())
	}
}

// NewPostStorageKoofrDigistorageOK creates a PostStorageKoofrDigistorageOK with default headers values
func NewPostStorageKoofrDigistorageOK() *PostStorageKoofrDigistorageOK {
	return &PostStorageKoofrDigistorageOK{}
}

/*
PostStorageKoofrDigistorageOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageKoofrDigistorageOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage koofr digistorage o k response has a 2xx status code
func (o *PostStorageKoofrDigistorageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage koofr digistorage o k response has a 3xx status code
func (o *PostStorageKoofrDigistorageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage koofr digistorage o k response has a 4xx status code
func (o *PostStorageKoofrDigistorageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage koofr digistorage o k response has a 5xx status code
func (o *PostStorageKoofrDigistorageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage koofr digistorage o k response a status code equal to that given
func (o *PostStorageKoofrDigistorageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage koofr digistorage o k response
func (o *PostStorageKoofrDigistorageOK) Code() int {
	return 200
}

func (o *PostStorageKoofrDigistorageOK) Error() string {
	return fmt.Sprintf("[POST /storage/koofr/digistorage][%d] postStorageKoofrDigistorageOK  %+v", 200, o.Payload)
}

func (o *PostStorageKoofrDigistorageOK) String() string {
	return fmt.Sprintf("[POST /storage/koofr/digistorage][%d] postStorageKoofrDigistorageOK  %+v", 200, o.Payload)
}

func (o *PostStorageKoofrDigistorageOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageKoofrDigistorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageKoofrDigistorageBadRequest creates a PostStorageKoofrDigistorageBadRequest with default headers values
func NewPostStorageKoofrDigistorageBadRequest() *PostStorageKoofrDigistorageBadRequest {
	return &PostStorageKoofrDigistorageBadRequest{}
}

/*
PostStorageKoofrDigistorageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageKoofrDigistorageBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage koofr digistorage bad request response has a 2xx status code
func (o *PostStorageKoofrDigistorageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage koofr digistorage bad request response has a 3xx status code
func (o *PostStorageKoofrDigistorageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage koofr digistorage bad request response has a 4xx status code
func (o *PostStorageKoofrDigistorageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage koofr digistorage bad request response has a 5xx status code
func (o *PostStorageKoofrDigistorageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage koofr digistorage bad request response a status code equal to that given
func (o *PostStorageKoofrDigistorageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage koofr digistorage bad request response
func (o *PostStorageKoofrDigistorageBadRequest) Code() int {
	return 400
}

func (o *PostStorageKoofrDigistorageBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/koofr/digistorage][%d] postStorageKoofrDigistorageBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageKoofrDigistorageBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/koofr/digistorage][%d] postStorageKoofrDigistorageBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageKoofrDigistorageBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageKoofrDigistorageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageKoofrDigistorageInternalServerError creates a PostStorageKoofrDigistorageInternalServerError with default headers values
func NewPostStorageKoofrDigistorageInternalServerError() *PostStorageKoofrDigistorageInternalServerError {
	return &PostStorageKoofrDigistorageInternalServerError{}
}

/*
PostStorageKoofrDigistorageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageKoofrDigistorageInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage koofr digistorage internal server error response has a 2xx status code
func (o *PostStorageKoofrDigistorageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage koofr digistorage internal server error response has a 3xx status code
func (o *PostStorageKoofrDigistorageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage koofr digistorage internal server error response has a 4xx status code
func (o *PostStorageKoofrDigistorageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage koofr digistorage internal server error response has a 5xx status code
func (o *PostStorageKoofrDigistorageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage koofr digistorage internal server error response a status code equal to that given
func (o *PostStorageKoofrDigistorageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage koofr digistorage internal server error response
func (o *PostStorageKoofrDigistorageInternalServerError) Code() int {
	return 500
}

func (o *PostStorageKoofrDigistorageInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/koofr/digistorage][%d] postStorageKoofrDigistorageInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageKoofrDigistorageInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/koofr/digistorage][%d] postStorageKoofrDigistorageInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageKoofrDigistorageInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageKoofrDigistorageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
