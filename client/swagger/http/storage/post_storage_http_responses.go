// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageHTTPReader is a Reader for the PostStorageHTTP structure.
type PostStorageHTTPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageHTTPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageHTTPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageHTTPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageHTTPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/http] PostStorageHTTP", response, response.Code())
	}
}

// NewPostStorageHTTPOK creates a PostStorageHTTPOK with default headers values
func NewPostStorageHTTPOK() *PostStorageHTTPOK {
	return &PostStorageHTTPOK{}
}

/*
PostStorageHTTPOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageHTTPOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage Http o k response has a 2xx status code
func (o *PostStorageHTTPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage Http o k response has a 3xx status code
func (o *PostStorageHTTPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage Http o k response has a 4xx status code
func (o *PostStorageHTTPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage Http o k response has a 5xx status code
func (o *PostStorageHTTPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage Http o k response a status code equal to that given
func (o *PostStorageHTTPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage Http o k response
func (o *PostStorageHTTPOK) Code() int {
	return 200
}

func (o *PostStorageHTTPOK) Error() string {
	return fmt.Sprintf("[POST /storage/http][%d] postStorageHttpOK  %+v", 200, o.Payload)
}

func (o *PostStorageHTTPOK) String() string {
	return fmt.Sprintf("[POST /storage/http][%d] postStorageHttpOK  %+v", 200, o.Payload)
}

func (o *PostStorageHTTPOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageHTTPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageHTTPBadRequest creates a PostStorageHTTPBadRequest with default headers values
func NewPostStorageHTTPBadRequest() *PostStorageHTTPBadRequest {
	return &PostStorageHTTPBadRequest{}
}

/*
PostStorageHTTPBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageHTTPBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage Http bad request response has a 2xx status code
func (o *PostStorageHTTPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage Http bad request response has a 3xx status code
func (o *PostStorageHTTPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage Http bad request response has a 4xx status code
func (o *PostStorageHTTPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage Http bad request response has a 5xx status code
func (o *PostStorageHTTPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage Http bad request response a status code equal to that given
func (o *PostStorageHTTPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage Http bad request response
func (o *PostStorageHTTPBadRequest) Code() int {
	return 400
}

func (o *PostStorageHTTPBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/http][%d] postStorageHttpBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageHTTPBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/http][%d] postStorageHttpBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageHTTPBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageHTTPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageHTTPInternalServerError creates a PostStorageHTTPInternalServerError with default headers values
func NewPostStorageHTTPInternalServerError() *PostStorageHTTPInternalServerError {
	return &PostStorageHTTPInternalServerError{}
}

/*
PostStorageHTTPInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageHTTPInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage Http internal server error response has a 2xx status code
func (o *PostStorageHTTPInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage Http internal server error response has a 3xx status code
func (o *PostStorageHTTPInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage Http internal server error response has a 4xx status code
func (o *PostStorageHTTPInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage Http internal server error response has a 5xx status code
func (o *PostStorageHTTPInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage Http internal server error response a status code equal to that given
func (o *PostStorageHTTPInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage Http internal server error response
func (o *PostStorageHTTPInternalServerError) Code() int {
	return 500
}

func (o *PostStorageHTTPInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/http][%d] postStorageHttpInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageHTTPInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/http][%d] postStorageHttpInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageHTTPInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageHTTPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
