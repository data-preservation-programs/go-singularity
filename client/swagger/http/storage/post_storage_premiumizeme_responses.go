// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStoragePremiumizemeReader is a Reader for the PostStoragePremiumizeme structure.
type PostStoragePremiumizemeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStoragePremiumizemeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStoragePremiumizemeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStoragePremiumizemeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStoragePremiumizemeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/premiumizeme] PostStoragePremiumizeme", response, response.Code())
	}
}

// NewPostStoragePremiumizemeOK creates a PostStoragePremiumizemeOK with default headers values
func NewPostStoragePremiumizemeOK() *PostStoragePremiumizemeOK {
	return &PostStoragePremiumizemeOK{}
}

/*
PostStoragePremiumizemeOK describes a response with status code 200, with default header values.

OK
*/
type PostStoragePremiumizemeOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage premiumizeme o k response has a 2xx status code
func (o *PostStoragePremiumizemeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage premiumizeme o k response has a 3xx status code
func (o *PostStoragePremiumizemeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage premiumizeme o k response has a 4xx status code
func (o *PostStoragePremiumizemeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage premiumizeme o k response has a 5xx status code
func (o *PostStoragePremiumizemeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage premiumizeme o k response a status code equal to that given
func (o *PostStoragePremiumizemeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage premiumizeme o k response
func (o *PostStoragePremiumizemeOK) Code() int {
	return 200
}

func (o *PostStoragePremiumizemeOK) Error() string {
	return fmt.Sprintf("[POST /storage/premiumizeme][%d] postStoragePremiumizemeOK  %+v", 200, o.Payload)
}

func (o *PostStoragePremiumizemeOK) String() string {
	return fmt.Sprintf("[POST /storage/premiumizeme][%d] postStoragePremiumizemeOK  %+v", 200, o.Payload)
}

func (o *PostStoragePremiumizemeOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStoragePremiumizemeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStoragePremiumizemeBadRequest creates a PostStoragePremiumizemeBadRequest with default headers values
func NewPostStoragePremiumizemeBadRequest() *PostStoragePremiumizemeBadRequest {
	return &PostStoragePremiumizemeBadRequest{}
}

/*
PostStoragePremiumizemeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStoragePremiumizemeBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage premiumizeme bad request response has a 2xx status code
func (o *PostStoragePremiumizemeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage premiumizeme bad request response has a 3xx status code
func (o *PostStoragePremiumizemeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage premiumizeme bad request response has a 4xx status code
func (o *PostStoragePremiumizemeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage premiumizeme bad request response has a 5xx status code
func (o *PostStoragePremiumizemeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage premiumizeme bad request response a status code equal to that given
func (o *PostStoragePremiumizemeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage premiumizeme bad request response
func (o *PostStoragePremiumizemeBadRequest) Code() int {
	return 400
}

func (o *PostStoragePremiumizemeBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/premiumizeme][%d] postStoragePremiumizemeBadRequest  %+v", 400, o.Payload)
}

func (o *PostStoragePremiumizemeBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/premiumizeme][%d] postStoragePremiumizemeBadRequest  %+v", 400, o.Payload)
}

func (o *PostStoragePremiumizemeBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStoragePremiumizemeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStoragePremiumizemeInternalServerError creates a PostStoragePremiumizemeInternalServerError with default headers values
func NewPostStoragePremiumizemeInternalServerError() *PostStoragePremiumizemeInternalServerError {
	return &PostStoragePremiumizemeInternalServerError{}
}

/*
PostStoragePremiumizemeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStoragePremiumizemeInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage premiumizeme internal server error response has a 2xx status code
func (o *PostStoragePremiumizemeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage premiumizeme internal server error response has a 3xx status code
func (o *PostStoragePremiumizemeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage premiumizeme internal server error response has a 4xx status code
func (o *PostStoragePremiumizemeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage premiumizeme internal server error response has a 5xx status code
func (o *PostStoragePremiumizemeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage premiumizeme internal server error response a status code equal to that given
func (o *PostStoragePremiumizemeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage premiumizeme internal server error response
func (o *PostStoragePremiumizemeInternalServerError) Code() int {
	return 500
}

func (o *PostStoragePremiumizemeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/premiumizeme][%d] postStoragePremiumizemeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStoragePremiumizemeInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/premiumizeme][%d] postStoragePremiumizemeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStoragePremiumizemeInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStoragePremiumizemeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
