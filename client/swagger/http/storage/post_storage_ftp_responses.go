// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageFtpReader is a Reader for the PostStorageFtp structure.
type PostStorageFtpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageFtpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageFtpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageFtpBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageFtpInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/ftp] PostStorageFtp", response, response.Code())
	}
}

// NewPostStorageFtpOK creates a PostStorageFtpOK with default headers values
func NewPostStorageFtpOK() *PostStorageFtpOK {
	return &PostStorageFtpOK{}
}

/*
PostStorageFtpOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageFtpOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage ftp o k response has a 2xx status code
func (o *PostStorageFtpOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage ftp o k response has a 3xx status code
func (o *PostStorageFtpOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage ftp o k response has a 4xx status code
func (o *PostStorageFtpOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage ftp o k response has a 5xx status code
func (o *PostStorageFtpOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage ftp o k response a status code equal to that given
func (o *PostStorageFtpOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage ftp o k response
func (o *PostStorageFtpOK) Code() int {
	return 200
}

func (o *PostStorageFtpOK) Error() string {
	return fmt.Sprintf("[POST /storage/ftp][%d] postStorageFtpOK  %+v", 200, o.Payload)
}

func (o *PostStorageFtpOK) String() string {
	return fmt.Sprintf("[POST /storage/ftp][%d] postStorageFtpOK  %+v", 200, o.Payload)
}

func (o *PostStorageFtpOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageFtpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageFtpBadRequest creates a PostStorageFtpBadRequest with default headers values
func NewPostStorageFtpBadRequest() *PostStorageFtpBadRequest {
	return &PostStorageFtpBadRequest{}
}

/*
PostStorageFtpBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageFtpBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage ftp bad request response has a 2xx status code
func (o *PostStorageFtpBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage ftp bad request response has a 3xx status code
func (o *PostStorageFtpBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage ftp bad request response has a 4xx status code
func (o *PostStorageFtpBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage ftp bad request response has a 5xx status code
func (o *PostStorageFtpBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage ftp bad request response a status code equal to that given
func (o *PostStorageFtpBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage ftp bad request response
func (o *PostStorageFtpBadRequest) Code() int {
	return 400
}

func (o *PostStorageFtpBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/ftp][%d] postStorageFtpBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageFtpBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/ftp][%d] postStorageFtpBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageFtpBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageFtpBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageFtpInternalServerError creates a PostStorageFtpInternalServerError with default headers values
func NewPostStorageFtpInternalServerError() *PostStorageFtpInternalServerError {
	return &PostStorageFtpInternalServerError{}
}

/*
PostStorageFtpInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageFtpInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage ftp internal server error response has a 2xx status code
func (o *PostStorageFtpInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage ftp internal server error response has a 3xx status code
func (o *PostStorageFtpInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage ftp internal server error response has a 4xx status code
func (o *PostStorageFtpInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage ftp internal server error response has a 5xx status code
func (o *PostStorageFtpInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage ftp internal server error response a status code equal to that given
func (o *PostStorageFtpInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage ftp internal server error response
func (o *PostStorageFtpInternalServerError) Code() int {
	return 500
}

func (o *PostStorageFtpInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/ftp][%d] postStorageFtpInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageFtpInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/ftp][%d] postStorageFtpInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageFtpInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageFtpInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
