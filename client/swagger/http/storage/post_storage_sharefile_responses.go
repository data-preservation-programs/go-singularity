// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageSharefileReader is a Reader for the PostStorageSharefile structure.
type PostStorageSharefileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageSharefileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageSharefileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageSharefileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageSharefileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/sharefile] PostStorageSharefile", response, response.Code())
	}
}

// NewPostStorageSharefileOK creates a PostStorageSharefileOK with default headers values
func NewPostStorageSharefileOK() *PostStorageSharefileOK {
	return &PostStorageSharefileOK{}
}

/*
PostStorageSharefileOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageSharefileOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage sharefile o k response has a 2xx status code
func (o *PostStorageSharefileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage sharefile o k response has a 3xx status code
func (o *PostStorageSharefileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage sharefile o k response has a 4xx status code
func (o *PostStorageSharefileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage sharefile o k response has a 5xx status code
func (o *PostStorageSharefileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage sharefile o k response a status code equal to that given
func (o *PostStorageSharefileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage sharefile o k response
func (o *PostStorageSharefileOK) Code() int {
	return 200
}

func (o *PostStorageSharefileOK) Error() string {
	return fmt.Sprintf("[POST /storage/sharefile][%d] postStorageSharefileOK  %+v", 200, o.Payload)
}

func (o *PostStorageSharefileOK) String() string {
	return fmt.Sprintf("[POST /storage/sharefile][%d] postStorageSharefileOK  %+v", 200, o.Payload)
}

func (o *PostStorageSharefileOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageSharefileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageSharefileBadRequest creates a PostStorageSharefileBadRequest with default headers values
func NewPostStorageSharefileBadRequest() *PostStorageSharefileBadRequest {
	return &PostStorageSharefileBadRequest{}
}

/*
PostStorageSharefileBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageSharefileBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage sharefile bad request response has a 2xx status code
func (o *PostStorageSharefileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage sharefile bad request response has a 3xx status code
func (o *PostStorageSharefileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage sharefile bad request response has a 4xx status code
func (o *PostStorageSharefileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage sharefile bad request response has a 5xx status code
func (o *PostStorageSharefileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage sharefile bad request response a status code equal to that given
func (o *PostStorageSharefileBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage sharefile bad request response
func (o *PostStorageSharefileBadRequest) Code() int {
	return 400
}

func (o *PostStorageSharefileBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/sharefile][%d] postStorageSharefileBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageSharefileBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/sharefile][%d] postStorageSharefileBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageSharefileBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageSharefileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageSharefileInternalServerError creates a PostStorageSharefileInternalServerError with default headers values
func NewPostStorageSharefileInternalServerError() *PostStorageSharefileInternalServerError {
	return &PostStorageSharefileInternalServerError{}
}

/*
PostStorageSharefileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageSharefileInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage sharefile internal server error response has a 2xx status code
func (o *PostStorageSharefileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage sharefile internal server error response has a 3xx status code
func (o *PostStorageSharefileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage sharefile internal server error response has a 4xx status code
func (o *PostStorageSharefileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage sharefile internal server error response has a 5xx status code
func (o *PostStorageSharefileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage sharefile internal server error response a status code equal to that given
func (o *PostStorageSharefileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage sharefile internal server error response
func (o *PostStorageSharefileInternalServerError) Code() int {
	return 500
}

func (o *PostStorageSharefileInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/sharefile][%d] postStorageSharefileInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageSharefileInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/sharefile][%d] postStorageSharefileInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageSharefileInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageSharefileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
