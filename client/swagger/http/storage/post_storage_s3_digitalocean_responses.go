// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageS3DigitaloceanReader is a Reader for the PostStorageS3Digitalocean structure.
type PostStorageS3DigitaloceanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageS3DigitaloceanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageS3DigitaloceanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageS3DigitaloceanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageS3DigitaloceanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/s3/digitalocean] PostStorageS3Digitalocean", response, response.Code())
	}
}

// NewPostStorageS3DigitaloceanOK creates a PostStorageS3DigitaloceanOK with default headers values
func NewPostStorageS3DigitaloceanOK() *PostStorageS3DigitaloceanOK {
	return &PostStorageS3DigitaloceanOK{}
}

/*
PostStorageS3DigitaloceanOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageS3DigitaloceanOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage s3 digitalocean o k response has a 2xx status code
func (o *PostStorageS3DigitaloceanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage s3 digitalocean o k response has a 3xx status code
func (o *PostStorageS3DigitaloceanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 digitalocean o k response has a 4xx status code
func (o *PostStorageS3DigitaloceanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 digitalocean o k response has a 5xx status code
func (o *PostStorageS3DigitaloceanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 digitalocean o k response a status code equal to that given
func (o *PostStorageS3DigitaloceanOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage s3 digitalocean o k response
func (o *PostStorageS3DigitaloceanOK) Code() int {
	return 200
}

func (o *PostStorageS3DigitaloceanOK) Error() string {
	return fmt.Sprintf("[POST /storage/s3/digitalocean][%d] postStorageS3DigitaloceanOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3DigitaloceanOK) String() string {
	return fmt.Sprintf("[POST /storage/s3/digitalocean][%d] postStorageS3DigitaloceanOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3DigitaloceanOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageS3DigitaloceanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3DigitaloceanBadRequest creates a PostStorageS3DigitaloceanBadRequest with default headers values
func NewPostStorageS3DigitaloceanBadRequest() *PostStorageS3DigitaloceanBadRequest {
	return &PostStorageS3DigitaloceanBadRequest{}
}

/*
PostStorageS3DigitaloceanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageS3DigitaloceanBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 digitalocean bad request response has a 2xx status code
func (o *PostStorageS3DigitaloceanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 digitalocean bad request response has a 3xx status code
func (o *PostStorageS3DigitaloceanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 digitalocean bad request response has a 4xx status code
func (o *PostStorageS3DigitaloceanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage s3 digitalocean bad request response has a 5xx status code
func (o *PostStorageS3DigitaloceanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 digitalocean bad request response a status code equal to that given
func (o *PostStorageS3DigitaloceanBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage s3 digitalocean bad request response
func (o *PostStorageS3DigitaloceanBadRequest) Code() int {
	return 400
}

func (o *PostStorageS3DigitaloceanBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/s3/digitalocean][%d] postStorageS3DigitaloceanBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3DigitaloceanBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/s3/digitalocean][%d] postStorageS3DigitaloceanBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3DigitaloceanBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3DigitaloceanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3DigitaloceanInternalServerError creates a PostStorageS3DigitaloceanInternalServerError with default headers values
func NewPostStorageS3DigitaloceanInternalServerError() *PostStorageS3DigitaloceanInternalServerError {
	return &PostStorageS3DigitaloceanInternalServerError{}
}

/*
PostStorageS3DigitaloceanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageS3DigitaloceanInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 digitalocean internal server error response has a 2xx status code
func (o *PostStorageS3DigitaloceanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 digitalocean internal server error response has a 3xx status code
func (o *PostStorageS3DigitaloceanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 digitalocean internal server error response has a 4xx status code
func (o *PostStorageS3DigitaloceanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 digitalocean internal server error response has a 5xx status code
func (o *PostStorageS3DigitaloceanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage s3 digitalocean internal server error response a status code equal to that given
func (o *PostStorageS3DigitaloceanInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage s3 digitalocean internal server error response
func (o *PostStorageS3DigitaloceanInternalServerError) Code() int {
	return 500
}

func (o *PostStorageS3DigitaloceanInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/s3/digitalocean][%d] postStorageS3DigitaloceanInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3DigitaloceanInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/s3/digitalocean][%d] postStorageS3DigitaloceanInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3DigitaloceanInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3DigitaloceanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
