// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageOosNoAuthReader is a Reader for the PostStorageOosNoAuth structure.
type PostStorageOosNoAuthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageOosNoAuthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageOosNoAuthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageOosNoAuthBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageOosNoAuthInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/oos/no_auth] PostStorageOosNoAuth", response, response.Code())
	}
}

// NewPostStorageOosNoAuthOK creates a PostStorageOosNoAuthOK with default headers values
func NewPostStorageOosNoAuthOK() *PostStorageOosNoAuthOK {
	return &PostStorageOosNoAuthOK{}
}

/*
PostStorageOosNoAuthOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageOosNoAuthOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage oos no auth o k response has a 2xx status code
func (o *PostStorageOosNoAuthOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage oos no auth o k response has a 3xx status code
func (o *PostStorageOosNoAuthOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage oos no auth o k response has a 4xx status code
func (o *PostStorageOosNoAuthOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage oos no auth o k response has a 5xx status code
func (o *PostStorageOosNoAuthOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage oos no auth o k response a status code equal to that given
func (o *PostStorageOosNoAuthOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage oos no auth o k response
func (o *PostStorageOosNoAuthOK) Code() int {
	return 200
}

func (o *PostStorageOosNoAuthOK) Error() string {
	return fmt.Sprintf("[POST /storage/oos/no_auth][%d] postStorageOosNoAuthOK  %+v", 200, o.Payload)
}

func (o *PostStorageOosNoAuthOK) String() string {
	return fmt.Sprintf("[POST /storage/oos/no_auth][%d] postStorageOosNoAuthOK  %+v", 200, o.Payload)
}

func (o *PostStorageOosNoAuthOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageOosNoAuthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageOosNoAuthBadRequest creates a PostStorageOosNoAuthBadRequest with default headers values
func NewPostStorageOosNoAuthBadRequest() *PostStorageOosNoAuthBadRequest {
	return &PostStorageOosNoAuthBadRequest{}
}

/*
PostStorageOosNoAuthBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageOosNoAuthBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage oos no auth bad request response has a 2xx status code
func (o *PostStorageOosNoAuthBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage oos no auth bad request response has a 3xx status code
func (o *PostStorageOosNoAuthBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage oos no auth bad request response has a 4xx status code
func (o *PostStorageOosNoAuthBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage oos no auth bad request response has a 5xx status code
func (o *PostStorageOosNoAuthBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage oos no auth bad request response a status code equal to that given
func (o *PostStorageOosNoAuthBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage oos no auth bad request response
func (o *PostStorageOosNoAuthBadRequest) Code() int {
	return 400
}

func (o *PostStorageOosNoAuthBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/oos/no_auth][%d] postStorageOosNoAuthBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageOosNoAuthBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/oos/no_auth][%d] postStorageOosNoAuthBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageOosNoAuthBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageOosNoAuthBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageOosNoAuthInternalServerError creates a PostStorageOosNoAuthInternalServerError with default headers values
func NewPostStorageOosNoAuthInternalServerError() *PostStorageOosNoAuthInternalServerError {
	return &PostStorageOosNoAuthInternalServerError{}
}

/*
PostStorageOosNoAuthInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageOosNoAuthInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage oos no auth internal server error response has a 2xx status code
func (o *PostStorageOosNoAuthInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage oos no auth internal server error response has a 3xx status code
func (o *PostStorageOosNoAuthInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage oos no auth internal server error response has a 4xx status code
func (o *PostStorageOosNoAuthInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage oos no auth internal server error response has a 5xx status code
func (o *PostStorageOosNoAuthInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage oos no auth internal server error response a status code equal to that given
func (o *PostStorageOosNoAuthInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage oos no auth internal server error response
func (o *PostStorageOosNoAuthInternalServerError) Code() int {
	return 500
}

func (o *PostStorageOosNoAuthInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/oos/no_auth][%d] postStorageOosNoAuthInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageOosNoAuthInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/oos/no_auth][%d] postStorageOosNoAuthInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageOosNoAuthInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageOosNoAuthInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
