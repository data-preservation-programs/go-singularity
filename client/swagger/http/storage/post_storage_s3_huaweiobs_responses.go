// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageS3HuaweiobsReader is a Reader for the PostStorageS3Huaweiobs structure.
type PostStorageS3HuaweiobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageS3HuaweiobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageS3HuaweiobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageS3HuaweiobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageS3HuaweiobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/s3/huaweiobs] PostStorageS3Huaweiobs", response, response.Code())
	}
}

// NewPostStorageS3HuaweiobsOK creates a PostStorageS3HuaweiobsOK with default headers values
func NewPostStorageS3HuaweiobsOK() *PostStorageS3HuaweiobsOK {
	return &PostStorageS3HuaweiobsOK{}
}

/*
PostStorageS3HuaweiobsOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageS3HuaweiobsOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage s3 huaweiobs o k response has a 2xx status code
func (o *PostStorageS3HuaweiobsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage s3 huaweiobs o k response has a 3xx status code
func (o *PostStorageS3HuaweiobsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 huaweiobs o k response has a 4xx status code
func (o *PostStorageS3HuaweiobsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 huaweiobs o k response has a 5xx status code
func (o *PostStorageS3HuaweiobsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 huaweiobs o k response a status code equal to that given
func (o *PostStorageS3HuaweiobsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage s3 huaweiobs o k response
func (o *PostStorageS3HuaweiobsOK) Code() int {
	return 200
}

func (o *PostStorageS3HuaweiobsOK) Error() string {
	return fmt.Sprintf("[POST /storage/s3/huaweiobs][%d] postStorageS3HuaweiobsOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3HuaweiobsOK) String() string {
	return fmt.Sprintf("[POST /storage/s3/huaweiobs][%d] postStorageS3HuaweiobsOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3HuaweiobsOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageS3HuaweiobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3HuaweiobsBadRequest creates a PostStorageS3HuaweiobsBadRequest with default headers values
func NewPostStorageS3HuaweiobsBadRequest() *PostStorageS3HuaweiobsBadRequest {
	return &PostStorageS3HuaweiobsBadRequest{}
}

/*
PostStorageS3HuaweiobsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageS3HuaweiobsBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 huaweiobs bad request response has a 2xx status code
func (o *PostStorageS3HuaweiobsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 huaweiobs bad request response has a 3xx status code
func (o *PostStorageS3HuaweiobsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 huaweiobs bad request response has a 4xx status code
func (o *PostStorageS3HuaweiobsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage s3 huaweiobs bad request response has a 5xx status code
func (o *PostStorageS3HuaweiobsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 huaweiobs bad request response a status code equal to that given
func (o *PostStorageS3HuaweiobsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage s3 huaweiobs bad request response
func (o *PostStorageS3HuaweiobsBadRequest) Code() int {
	return 400
}

func (o *PostStorageS3HuaweiobsBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/s3/huaweiobs][%d] postStorageS3HuaweiobsBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3HuaweiobsBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/s3/huaweiobs][%d] postStorageS3HuaweiobsBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3HuaweiobsBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3HuaweiobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3HuaweiobsInternalServerError creates a PostStorageS3HuaweiobsInternalServerError with default headers values
func NewPostStorageS3HuaweiobsInternalServerError() *PostStorageS3HuaweiobsInternalServerError {
	return &PostStorageS3HuaweiobsInternalServerError{}
}

/*
PostStorageS3HuaweiobsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageS3HuaweiobsInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 huaweiobs internal server error response has a 2xx status code
func (o *PostStorageS3HuaweiobsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 huaweiobs internal server error response has a 3xx status code
func (o *PostStorageS3HuaweiobsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 huaweiobs internal server error response has a 4xx status code
func (o *PostStorageS3HuaweiobsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 huaweiobs internal server error response has a 5xx status code
func (o *PostStorageS3HuaweiobsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage s3 huaweiobs internal server error response a status code equal to that given
func (o *PostStorageS3HuaweiobsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage s3 huaweiobs internal server error response
func (o *PostStorageS3HuaweiobsInternalServerError) Code() int {
	return 500
}

func (o *PostStorageS3HuaweiobsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/s3/huaweiobs][%d] postStorageS3HuaweiobsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3HuaweiobsInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/s3/huaweiobs][%d] postStorageS3HuaweiobsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3HuaweiobsInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3HuaweiobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
