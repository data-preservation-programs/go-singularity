// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageS3AlibabaReader is a Reader for the PostStorageS3Alibaba structure.
type PostStorageS3AlibabaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageS3AlibabaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageS3AlibabaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageS3AlibabaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageS3AlibabaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/s3/alibaba] PostStorageS3Alibaba", response, response.Code())
	}
}

// NewPostStorageS3AlibabaOK creates a PostStorageS3AlibabaOK with default headers values
func NewPostStorageS3AlibabaOK() *PostStorageS3AlibabaOK {
	return &PostStorageS3AlibabaOK{}
}

/*
PostStorageS3AlibabaOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageS3AlibabaOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage s3 alibaba o k response has a 2xx status code
func (o *PostStorageS3AlibabaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage s3 alibaba o k response has a 3xx status code
func (o *PostStorageS3AlibabaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 alibaba o k response has a 4xx status code
func (o *PostStorageS3AlibabaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 alibaba o k response has a 5xx status code
func (o *PostStorageS3AlibabaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 alibaba o k response a status code equal to that given
func (o *PostStorageS3AlibabaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage s3 alibaba o k response
func (o *PostStorageS3AlibabaOK) Code() int {
	return 200
}

func (o *PostStorageS3AlibabaOK) Error() string {
	return fmt.Sprintf("[POST /storage/s3/alibaba][%d] postStorageS3AlibabaOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3AlibabaOK) String() string {
	return fmt.Sprintf("[POST /storage/s3/alibaba][%d] postStorageS3AlibabaOK  %+v", 200, o.Payload)
}

func (o *PostStorageS3AlibabaOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageS3AlibabaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3AlibabaBadRequest creates a PostStorageS3AlibabaBadRequest with default headers values
func NewPostStorageS3AlibabaBadRequest() *PostStorageS3AlibabaBadRequest {
	return &PostStorageS3AlibabaBadRequest{}
}

/*
PostStorageS3AlibabaBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageS3AlibabaBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 alibaba bad request response has a 2xx status code
func (o *PostStorageS3AlibabaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 alibaba bad request response has a 3xx status code
func (o *PostStorageS3AlibabaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 alibaba bad request response has a 4xx status code
func (o *PostStorageS3AlibabaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage s3 alibaba bad request response has a 5xx status code
func (o *PostStorageS3AlibabaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage s3 alibaba bad request response a status code equal to that given
func (o *PostStorageS3AlibabaBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage s3 alibaba bad request response
func (o *PostStorageS3AlibabaBadRequest) Code() int {
	return 400
}

func (o *PostStorageS3AlibabaBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/s3/alibaba][%d] postStorageS3AlibabaBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3AlibabaBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/s3/alibaba][%d] postStorageS3AlibabaBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageS3AlibabaBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3AlibabaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageS3AlibabaInternalServerError creates a PostStorageS3AlibabaInternalServerError with default headers values
func NewPostStorageS3AlibabaInternalServerError() *PostStorageS3AlibabaInternalServerError {
	return &PostStorageS3AlibabaInternalServerError{}
}

/*
PostStorageS3AlibabaInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageS3AlibabaInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage s3 alibaba internal server error response has a 2xx status code
func (o *PostStorageS3AlibabaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage s3 alibaba internal server error response has a 3xx status code
func (o *PostStorageS3AlibabaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage s3 alibaba internal server error response has a 4xx status code
func (o *PostStorageS3AlibabaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage s3 alibaba internal server error response has a 5xx status code
func (o *PostStorageS3AlibabaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage s3 alibaba internal server error response a status code equal to that given
func (o *PostStorageS3AlibabaInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage s3 alibaba internal server error response
func (o *PostStorageS3AlibabaInternalServerError) Code() int {
	return 500
}

func (o *PostStorageS3AlibabaInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/s3/alibaba][%d] postStorageS3AlibabaInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3AlibabaInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/s3/alibaba][%d] postStorageS3AlibabaInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageS3AlibabaInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageS3AlibabaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
