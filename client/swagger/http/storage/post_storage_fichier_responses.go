// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostStorageFichierReader is a Reader for the PostStorageFichier structure.
type PostStorageFichierReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostStorageFichierReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostStorageFichierOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostStorageFichierBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostStorageFichierInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /storage/fichier] PostStorageFichier", response, response.Code())
	}
}

// NewPostStorageFichierOK creates a PostStorageFichierOK with default headers values
func NewPostStorageFichierOK() *PostStorageFichierOK {
	return &PostStorageFichierOK{}
}

/*
PostStorageFichierOK describes a response with status code 200, with default header values.

OK
*/
type PostStorageFichierOK struct {
	Payload *models.ModelStorage
}

// IsSuccess returns true when this post storage fichier o k response has a 2xx status code
func (o *PostStorageFichierOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post storage fichier o k response has a 3xx status code
func (o *PostStorageFichierOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage fichier o k response has a 4xx status code
func (o *PostStorageFichierOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage fichier o k response has a 5xx status code
func (o *PostStorageFichierOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage fichier o k response a status code equal to that given
func (o *PostStorageFichierOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post storage fichier o k response
func (o *PostStorageFichierOK) Code() int {
	return 200
}

func (o *PostStorageFichierOK) Error() string {
	return fmt.Sprintf("[POST /storage/fichier][%d] postStorageFichierOK  %+v", 200, o.Payload)
}

func (o *PostStorageFichierOK) String() string {
	return fmt.Sprintf("[POST /storage/fichier][%d] postStorageFichierOK  %+v", 200, o.Payload)
}

func (o *PostStorageFichierOK) GetPayload() *models.ModelStorage {
	return o.Payload
}

func (o *PostStorageFichierOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelStorage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageFichierBadRequest creates a PostStorageFichierBadRequest with default headers values
func NewPostStorageFichierBadRequest() *PostStorageFichierBadRequest {
	return &PostStorageFichierBadRequest{}
}

/*
PostStorageFichierBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostStorageFichierBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage fichier bad request response has a 2xx status code
func (o *PostStorageFichierBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage fichier bad request response has a 3xx status code
func (o *PostStorageFichierBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage fichier bad request response has a 4xx status code
func (o *PostStorageFichierBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post storage fichier bad request response has a 5xx status code
func (o *PostStorageFichierBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post storage fichier bad request response a status code equal to that given
func (o *PostStorageFichierBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post storage fichier bad request response
func (o *PostStorageFichierBadRequest) Code() int {
	return 400
}

func (o *PostStorageFichierBadRequest) Error() string {
	return fmt.Sprintf("[POST /storage/fichier][%d] postStorageFichierBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageFichierBadRequest) String() string {
	return fmt.Sprintf("[POST /storage/fichier][%d] postStorageFichierBadRequest  %+v", 400, o.Payload)
}

func (o *PostStorageFichierBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageFichierBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostStorageFichierInternalServerError creates a PostStorageFichierInternalServerError with default headers values
func NewPostStorageFichierInternalServerError() *PostStorageFichierInternalServerError {
	return &PostStorageFichierInternalServerError{}
}

/*
PostStorageFichierInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostStorageFichierInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post storage fichier internal server error response has a 2xx status code
func (o *PostStorageFichierInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post storage fichier internal server error response has a 3xx status code
func (o *PostStorageFichierInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post storage fichier internal server error response has a 4xx status code
func (o *PostStorageFichierInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post storage fichier internal server error response has a 5xx status code
func (o *PostStorageFichierInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post storage fichier internal server error response a status code equal to that given
func (o *PostStorageFichierInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post storage fichier internal server error response
func (o *PostStorageFichierInternalServerError) Code() int {
	return 500
}

func (o *PostStorageFichierInternalServerError) Error() string {
	return fmt.Sprintf("[POST /storage/fichier][%d] postStorageFichierInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageFichierInternalServerError) String() string {
	return fmt.Sprintf("[POST /storage/fichier][%d] postStorageFichierInternalServerError  %+v", 500, o.Payload)
}

func (o *PostStorageFichierInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostStorageFichierInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
