// Code generated by go-swagger; DO NOT EDIT.

package preparation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// DeletePreparationIDOutputNameReader is a Reader for the DeletePreparationIDOutputName structure.
type DeletePreparationIDOutputNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePreparationIDOutputNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePreparationIDOutputNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePreparationIDOutputNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePreparationIDOutputNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /preparation/{id}/output/{name}] DeletePreparationIDOutputName", response, response.Code())
	}
}

// NewDeletePreparationIDOutputNameOK creates a DeletePreparationIDOutputNameOK with default headers values
func NewDeletePreparationIDOutputNameOK() *DeletePreparationIDOutputNameOK {
	return &DeletePreparationIDOutputNameOK{}
}

/*
DeletePreparationIDOutputNameOK describes a response with status code 200, with default header values.

OK
*/
type DeletePreparationIDOutputNameOK struct {
	Payload *models.ModelPreparation
}

// IsSuccess returns true when this delete preparation Id output name o k response has a 2xx status code
func (o *DeletePreparationIDOutputNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete preparation Id output name o k response has a 3xx status code
func (o *DeletePreparationIDOutputNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete preparation Id output name o k response has a 4xx status code
func (o *DeletePreparationIDOutputNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete preparation Id output name o k response has a 5xx status code
func (o *DeletePreparationIDOutputNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete preparation Id output name o k response a status code equal to that given
func (o *DeletePreparationIDOutputNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete preparation Id output name o k response
func (o *DeletePreparationIDOutputNameOK) Code() int {
	return 200
}

func (o *DeletePreparationIDOutputNameOK) Error() string {
	return fmt.Sprintf("[DELETE /preparation/{id}/output/{name}][%d] deletePreparationIdOutputNameOK  %+v", 200, o.Payload)
}

func (o *DeletePreparationIDOutputNameOK) String() string {
	return fmt.Sprintf("[DELETE /preparation/{id}/output/{name}][%d] deletePreparationIdOutputNameOK  %+v", 200, o.Payload)
}

func (o *DeletePreparationIDOutputNameOK) GetPayload() *models.ModelPreparation {
	return o.Payload
}

func (o *DeletePreparationIDOutputNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelPreparation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePreparationIDOutputNameBadRequest creates a DeletePreparationIDOutputNameBadRequest with default headers values
func NewDeletePreparationIDOutputNameBadRequest() *DeletePreparationIDOutputNameBadRequest {
	return &DeletePreparationIDOutputNameBadRequest{}
}

/*
DeletePreparationIDOutputNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeletePreparationIDOutputNameBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this delete preparation Id output name bad request response has a 2xx status code
func (o *DeletePreparationIDOutputNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete preparation Id output name bad request response has a 3xx status code
func (o *DeletePreparationIDOutputNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete preparation Id output name bad request response has a 4xx status code
func (o *DeletePreparationIDOutputNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete preparation Id output name bad request response has a 5xx status code
func (o *DeletePreparationIDOutputNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete preparation Id output name bad request response a status code equal to that given
func (o *DeletePreparationIDOutputNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete preparation Id output name bad request response
func (o *DeletePreparationIDOutputNameBadRequest) Code() int {
	return 400
}

func (o *DeletePreparationIDOutputNameBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /preparation/{id}/output/{name}][%d] deletePreparationIdOutputNameBadRequest  %+v", 400, o.Payload)
}

func (o *DeletePreparationIDOutputNameBadRequest) String() string {
	return fmt.Sprintf("[DELETE /preparation/{id}/output/{name}][%d] deletePreparationIdOutputNameBadRequest  %+v", 400, o.Payload)
}

func (o *DeletePreparationIDOutputNameBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *DeletePreparationIDOutputNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePreparationIDOutputNameInternalServerError creates a DeletePreparationIDOutputNameInternalServerError with default headers values
func NewDeletePreparationIDOutputNameInternalServerError() *DeletePreparationIDOutputNameInternalServerError {
	return &DeletePreparationIDOutputNameInternalServerError{}
}

/*
DeletePreparationIDOutputNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeletePreparationIDOutputNameInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this delete preparation Id output name internal server error response has a 2xx status code
func (o *DeletePreparationIDOutputNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete preparation Id output name internal server error response has a 3xx status code
func (o *DeletePreparationIDOutputNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete preparation Id output name internal server error response has a 4xx status code
func (o *DeletePreparationIDOutputNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete preparation Id output name internal server error response has a 5xx status code
func (o *DeletePreparationIDOutputNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete preparation Id output name internal server error response a status code equal to that given
func (o *DeletePreparationIDOutputNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete preparation Id output name internal server error response
func (o *DeletePreparationIDOutputNameInternalServerError) Code() int {
	return 500
}

func (o *DeletePreparationIDOutputNameInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /preparation/{id}/output/{name}][%d] deletePreparationIdOutputNameInternalServerError  %+v", 500, o.Payload)
}

func (o *DeletePreparationIDOutputNameInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /preparation/{id}/output/{name}][%d] deletePreparationIdOutputNameInternalServerError  %+v", 500, o.Payload)
}

func (o *DeletePreparationIDOutputNameInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *DeletePreparationIDOutputNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
