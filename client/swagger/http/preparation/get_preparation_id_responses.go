// Code generated by go-swagger; DO NOT EDIT.

package preparation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetPreparationIDReader is a Reader for the GetPreparationID structure.
type GetPreparationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPreparationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPreparationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPreparationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPreparationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /preparation/{id}] GetPreparationID", response, response.Code())
	}
}

// NewGetPreparationIDOK creates a GetPreparationIDOK with default headers values
func NewGetPreparationIDOK() *GetPreparationIDOK {
	return &GetPreparationIDOK{}
}

/*
GetPreparationIDOK describes a response with status code 200, with default header values.

OK
*/
type GetPreparationIDOK struct {
	Payload []*models.DataprepSourceStatus
}

// IsSuccess returns true when this get preparation Id o k response has a 2xx status code
func (o *GetPreparationIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get preparation Id o k response has a 3xx status code
func (o *GetPreparationIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get preparation Id o k response has a 4xx status code
func (o *GetPreparationIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get preparation Id o k response has a 5xx status code
func (o *GetPreparationIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get preparation Id o k response a status code equal to that given
func (o *GetPreparationIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get preparation Id o k response
func (o *GetPreparationIDOK) Code() int {
	return 200
}

func (o *GetPreparationIDOK) Error() string {
	return fmt.Sprintf("[GET /preparation/{id}][%d] getPreparationIdOK  %+v", 200, o.Payload)
}

func (o *GetPreparationIDOK) String() string {
	return fmt.Sprintf("[GET /preparation/{id}][%d] getPreparationIdOK  %+v", 200, o.Payload)
}

func (o *GetPreparationIDOK) GetPayload() []*models.DataprepSourceStatus {
	return o.Payload
}

func (o *GetPreparationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPreparationIDBadRequest creates a GetPreparationIDBadRequest with default headers values
func NewGetPreparationIDBadRequest() *GetPreparationIDBadRequest {
	return &GetPreparationIDBadRequest{}
}

/*
GetPreparationIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPreparationIDBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get preparation Id bad request response has a 2xx status code
func (o *GetPreparationIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get preparation Id bad request response has a 3xx status code
func (o *GetPreparationIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get preparation Id bad request response has a 4xx status code
func (o *GetPreparationIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get preparation Id bad request response has a 5xx status code
func (o *GetPreparationIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get preparation Id bad request response a status code equal to that given
func (o *GetPreparationIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get preparation Id bad request response
func (o *GetPreparationIDBadRequest) Code() int {
	return 400
}

func (o *GetPreparationIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /preparation/{id}][%d] getPreparationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetPreparationIDBadRequest) String() string {
	return fmt.Sprintf("[GET /preparation/{id}][%d] getPreparationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetPreparationIDBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetPreparationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPreparationIDInternalServerError creates a GetPreparationIDInternalServerError with default headers values
func NewGetPreparationIDInternalServerError() *GetPreparationIDInternalServerError {
	return &GetPreparationIDInternalServerError{}
}

/*
GetPreparationIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPreparationIDInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get preparation Id internal server error response has a 2xx status code
func (o *GetPreparationIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get preparation Id internal server error response has a 3xx status code
func (o *GetPreparationIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get preparation Id internal server error response has a 4xx status code
func (o *GetPreparationIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get preparation Id internal server error response has a 5xx status code
func (o *GetPreparationIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get preparation Id internal server error response a status code equal to that given
func (o *GetPreparationIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get preparation Id internal server error response
func (o *GetPreparationIDInternalServerError) Code() int {
	return 500
}

func (o *GetPreparationIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /preparation/{id}][%d] getPreparationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPreparationIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /preparation/{id}][%d] getPreparationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPreparationIDInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetPreparationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
