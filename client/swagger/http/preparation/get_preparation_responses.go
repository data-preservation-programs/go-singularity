// Code generated by go-swagger; DO NOT EDIT.

package preparation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetPreparationReader is a Reader for the GetPreparation structure.
type GetPreparationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPreparationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPreparationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPreparationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPreparationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /preparation] GetPreparation", response, response.Code())
	}
}

// NewGetPreparationOK creates a GetPreparationOK with default headers values
func NewGetPreparationOK() *GetPreparationOK {
	return &GetPreparationOK{}
}

/*
GetPreparationOK describes a response with status code 200, with default header values.

OK
*/
type GetPreparationOK struct {
	Payload []*models.ModelPreparation
}

// IsSuccess returns true when this get preparation o k response has a 2xx status code
func (o *GetPreparationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get preparation o k response has a 3xx status code
func (o *GetPreparationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get preparation o k response has a 4xx status code
func (o *GetPreparationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get preparation o k response has a 5xx status code
func (o *GetPreparationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get preparation o k response a status code equal to that given
func (o *GetPreparationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get preparation o k response
func (o *GetPreparationOK) Code() int {
	return 200
}

func (o *GetPreparationOK) Error() string {
	return fmt.Sprintf("[GET /preparation][%d] getPreparationOK  %+v", 200, o.Payload)
}

func (o *GetPreparationOK) String() string {
	return fmt.Sprintf("[GET /preparation][%d] getPreparationOK  %+v", 200, o.Payload)
}

func (o *GetPreparationOK) GetPayload() []*models.ModelPreparation {
	return o.Payload
}

func (o *GetPreparationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPreparationBadRequest creates a GetPreparationBadRequest with default headers values
func NewGetPreparationBadRequest() *GetPreparationBadRequest {
	return &GetPreparationBadRequest{}
}

/*
GetPreparationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPreparationBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get preparation bad request response has a 2xx status code
func (o *GetPreparationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get preparation bad request response has a 3xx status code
func (o *GetPreparationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get preparation bad request response has a 4xx status code
func (o *GetPreparationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get preparation bad request response has a 5xx status code
func (o *GetPreparationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get preparation bad request response a status code equal to that given
func (o *GetPreparationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get preparation bad request response
func (o *GetPreparationBadRequest) Code() int {
	return 400
}

func (o *GetPreparationBadRequest) Error() string {
	return fmt.Sprintf("[GET /preparation][%d] getPreparationBadRequest  %+v", 400, o.Payload)
}

func (o *GetPreparationBadRequest) String() string {
	return fmt.Sprintf("[GET /preparation][%d] getPreparationBadRequest  %+v", 400, o.Payload)
}

func (o *GetPreparationBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetPreparationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPreparationInternalServerError creates a GetPreparationInternalServerError with default headers values
func NewGetPreparationInternalServerError() *GetPreparationInternalServerError {
	return &GetPreparationInternalServerError{}
}

/*
GetPreparationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPreparationInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get preparation internal server error response has a 2xx status code
func (o *GetPreparationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get preparation internal server error response has a 3xx status code
func (o *GetPreparationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get preparation internal server error response has a 4xx status code
func (o *GetPreparationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get preparation internal server error response has a 5xx status code
func (o *GetPreparationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get preparation internal server error response a status code equal to that given
func (o *GetPreparationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get preparation internal server error response
func (o *GetPreparationInternalServerError) Code() int {
	return 500
}

func (o *GetPreparationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /preparation][%d] getPreparationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPreparationInternalServerError) String() string {
	return fmt.Sprintf("[GET /preparation][%d] getPreparationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPreparationInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetPreparationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
