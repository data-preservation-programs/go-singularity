// Code generated by go-swagger; DO NOT EDIT.

package deal_schedule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetPreparationIDSchedulesReader is a Reader for the GetPreparationIDSchedules structure.
type GetPreparationIDSchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPreparationIDSchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPreparationIDSchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPreparationIDSchedulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPreparationIDSchedulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /preparation/{id}/schedules] GetPreparationIDSchedules", response, response.Code())
	}
}

// NewGetPreparationIDSchedulesOK creates a GetPreparationIDSchedulesOK with default headers values
func NewGetPreparationIDSchedulesOK() *GetPreparationIDSchedulesOK {
	return &GetPreparationIDSchedulesOK{}
}

/*
GetPreparationIDSchedulesOK describes a response with status code 200, with default header values.

OK
*/
type GetPreparationIDSchedulesOK struct {
	Payload []*models.ModelSchedule
}

// IsSuccess returns true when this get preparation Id schedules o k response has a 2xx status code
func (o *GetPreparationIDSchedulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get preparation Id schedules o k response has a 3xx status code
func (o *GetPreparationIDSchedulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get preparation Id schedules o k response has a 4xx status code
func (o *GetPreparationIDSchedulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get preparation Id schedules o k response has a 5xx status code
func (o *GetPreparationIDSchedulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get preparation Id schedules o k response a status code equal to that given
func (o *GetPreparationIDSchedulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get preparation Id schedules o k response
func (o *GetPreparationIDSchedulesOK) Code() int {
	return 200
}

func (o *GetPreparationIDSchedulesOK) Error() string {
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] getPreparationIdSchedulesOK  %+v", 200, o.Payload)
}

func (o *GetPreparationIDSchedulesOK) String() string {
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] getPreparationIdSchedulesOK  %+v", 200, o.Payload)
}

func (o *GetPreparationIDSchedulesOK) GetPayload() []*models.ModelSchedule {
	return o.Payload
}

func (o *GetPreparationIDSchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPreparationIDSchedulesBadRequest creates a GetPreparationIDSchedulesBadRequest with default headers values
func NewGetPreparationIDSchedulesBadRequest() *GetPreparationIDSchedulesBadRequest {
	return &GetPreparationIDSchedulesBadRequest{}
}

/*
GetPreparationIDSchedulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPreparationIDSchedulesBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get preparation Id schedules bad request response has a 2xx status code
func (o *GetPreparationIDSchedulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get preparation Id schedules bad request response has a 3xx status code
func (o *GetPreparationIDSchedulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get preparation Id schedules bad request response has a 4xx status code
func (o *GetPreparationIDSchedulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get preparation Id schedules bad request response has a 5xx status code
func (o *GetPreparationIDSchedulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get preparation Id schedules bad request response a status code equal to that given
func (o *GetPreparationIDSchedulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get preparation Id schedules bad request response
func (o *GetPreparationIDSchedulesBadRequest) Code() int {
	return 400
}

func (o *GetPreparationIDSchedulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] getPreparationIdSchedulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetPreparationIDSchedulesBadRequest) String() string {
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] getPreparationIdSchedulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetPreparationIDSchedulesBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetPreparationIDSchedulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPreparationIDSchedulesInternalServerError creates a GetPreparationIDSchedulesInternalServerError with default headers values
func NewGetPreparationIDSchedulesInternalServerError() *GetPreparationIDSchedulesInternalServerError {
	return &GetPreparationIDSchedulesInternalServerError{}
}

/*
GetPreparationIDSchedulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPreparationIDSchedulesInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get preparation Id schedules internal server error response has a 2xx status code
func (o *GetPreparationIDSchedulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get preparation Id schedules internal server error response has a 3xx status code
func (o *GetPreparationIDSchedulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get preparation Id schedules internal server error response has a 4xx status code
func (o *GetPreparationIDSchedulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get preparation Id schedules internal server error response has a 5xx status code
func (o *GetPreparationIDSchedulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get preparation Id schedules internal server error response a status code equal to that given
func (o *GetPreparationIDSchedulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get preparation Id schedules internal server error response
func (o *GetPreparationIDSchedulesInternalServerError) Code() int {
	return 500
}

func (o *GetPreparationIDSchedulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] getPreparationIdSchedulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPreparationIDSchedulesInternalServerError) String() string {
	return fmt.Sprintf("[GET /preparation/{id}/schedules][%d] getPreparationIdSchedulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPreparationIDSchedulesInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetPreparationIDSchedulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
