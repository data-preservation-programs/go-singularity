// Code generated by go-swagger; DO NOT EDIT.

package deal_schedule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostScheduleReader is a Reader for the PostSchedule structure.
type PostScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /schedule] PostSchedule", response, response.Code())
	}
}

// NewPostScheduleOK creates a PostScheduleOK with default headers values
func NewPostScheduleOK() *PostScheduleOK {
	return &PostScheduleOK{}
}

/*
PostScheduleOK describes a response with status code 200, with default header values.

OK
*/
type PostScheduleOK struct {
	Payload *models.ModelSchedule
}

// IsSuccess returns true when this post schedule o k response has a 2xx status code
func (o *PostScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post schedule o k response has a 3xx status code
func (o *PostScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post schedule o k response has a 4xx status code
func (o *PostScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post schedule o k response has a 5xx status code
func (o *PostScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post schedule o k response a status code equal to that given
func (o *PostScheduleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post schedule o k response
func (o *PostScheduleOK) Code() int {
	return 200
}

func (o *PostScheduleOK) Error() string {
	return fmt.Sprintf("[POST /schedule][%d] postScheduleOK  %+v", 200, o.Payload)
}

func (o *PostScheduleOK) String() string {
	return fmt.Sprintf("[POST /schedule][%d] postScheduleOK  %+v", 200, o.Payload)
}

func (o *PostScheduleOK) GetPayload() *models.ModelSchedule {
	return o.Payload
}

func (o *PostScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelSchedule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScheduleBadRequest creates a PostScheduleBadRequest with default headers values
func NewPostScheduleBadRequest() *PostScheduleBadRequest {
	return &PostScheduleBadRequest{}
}

/*
PostScheduleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostScheduleBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post schedule bad request response has a 2xx status code
func (o *PostScheduleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post schedule bad request response has a 3xx status code
func (o *PostScheduleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post schedule bad request response has a 4xx status code
func (o *PostScheduleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post schedule bad request response has a 5xx status code
func (o *PostScheduleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post schedule bad request response a status code equal to that given
func (o *PostScheduleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post schedule bad request response
func (o *PostScheduleBadRequest) Code() int {
	return 400
}

func (o *PostScheduleBadRequest) Error() string {
	return fmt.Sprintf("[POST /schedule][%d] postScheduleBadRequest  %+v", 400, o.Payload)
}

func (o *PostScheduleBadRequest) String() string {
	return fmt.Sprintf("[POST /schedule][%d] postScheduleBadRequest  %+v", 400, o.Payload)
}

func (o *PostScheduleBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostScheduleInternalServerError creates a PostScheduleInternalServerError with default headers values
func NewPostScheduleInternalServerError() *PostScheduleInternalServerError {
	return &PostScheduleInternalServerError{}
}

/*
PostScheduleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostScheduleInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post schedule internal server error response has a 2xx status code
func (o *PostScheduleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post schedule internal server error response has a 3xx status code
func (o *PostScheduleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post schedule internal server error response has a 4xx status code
func (o *PostScheduleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post schedule internal server error response has a 5xx status code
func (o *PostScheduleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post schedule internal server error response a status code equal to that given
func (o *PostScheduleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post schedule internal server error response
func (o *PostScheduleInternalServerError) Code() int {
	return 500
}

func (o *PostScheduleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /schedule][%d] postScheduleInternalServerError  %+v", 500, o.Payload)
}

func (o *PostScheduleInternalServerError) String() string {
	return fmt.Sprintf("[POST /schedule][%d] postScheduleInternalServerError  %+v", 500, o.Payload)
}

func (o *PostScheduleInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
