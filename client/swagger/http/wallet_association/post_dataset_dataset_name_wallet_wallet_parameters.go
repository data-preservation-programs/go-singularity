// Code generated by go-swagger; DO NOT EDIT.

package wallet_association

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostDatasetDatasetNameWalletWalletParams creates a new PostDatasetDatasetNameWalletWalletParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostDatasetDatasetNameWalletWalletParams() *PostDatasetDatasetNameWalletWalletParams {
	return &PostDatasetDatasetNameWalletWalletParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostDatasetDatasetNameWalletWalletParamsWithTimeout creates a new PostDatasetDatasetNameWalletWalletParams object
// with the ability to set a timeout on a request.
func NewPostDatasetDatasetNameWalletWalletParamsWithTimeout(timeout time.Duration) *PostDatasetDatasetNameWalletWalletParams {
	return &PostDatasetDatasetNameWalletWalletParams{
		timeout: timeout,
	}
}

// NewPostDatasetDatasetNameWalletWalletParamsWithContext creates a new PostDatasetDatasetNameWalletWalletParams object
// with the ability to set a context for a request.
func NewPostDatasetDatasetNameWalletWalletParamsWithContext(ctx context.Context) *PostDatasetDatasetNameWalletWalletParams {
	return &PostDatasetDatasetNameWalletWalletParams{
		Context: ctx,
	}
}

// NewPostDatasetDatasetNameWalletWalletParamsWithHTTPClient creates a new PostDatasetDatasetNameWalletWalletParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostDatasetDatasetNameWalletWalletParamsWithHTTPClient(client *http.Client) *PostDatasetDatasetNameWalletWalletParams {
	return &PostDatasetDatasetNameWalletWalletParams{
		HTTPClient: client,
	}
}

/*
PostDatasetDatasetNameWalletWalletParams contains all the parameters to send to the API endpoint

	for the post dataset dataset name wallet wallet operation.

	Typically these are written to a http.Request.
*/
type PostDatasetDatasetNameWalletWalletParams struct {

	/* DatasetName.

	   Dataset name
	*/
	DatasetName string

	/* Wallet.

	   Wallet Address
	*/
	Wallet string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post dataset dataset name wallet wallet params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostDatasetDatasetNameWalletWalletParams) WithDefaults() *PostDatasetDatasetNameWalletWalletParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post dataset dataset name wallet wallet params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostDatasetDatasetNameWalletWalletParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) WithTimeout(timeout time.Duration) *PostDatasetDatasetNameWalletWalletParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) WithContext(ctx context.Context) *PostDatasetDatasetNameWalletWalletParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) WithHTTPClient(client *http.Client) *PostDatasetDatasetNameWalletWalletParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDatasetName adds the datasetName to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) WithDatasetName(datasetName string) *PostDatasetDatasetNameWalletWalletParams {
	o.SetDatasetName(datasetName)
	return o
}

// SetDatasetName adds the datasetName to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) SetDatasetName(datasetName string) {
	o.DatasetName = datasetName
}

// WithWallet adds the wallet to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) WithWallet(wallet string) *PostDatasetDatasetNameWalletWalletParams {
	o.SetWallet(wallet)
	return o
}

// SetWallet adds the wallet to the post dataset dataset name wallet wallet params
func (o *PostDatasetDatasetNameWalletWalletParams) SetWallet(wallet string) {
	o.Wallet = wallet
}

// WriteToRequest writes these params to a swagger request
func (o *PostDatasetDatasetNameWalletWalletParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param datasetName
	if err := r.SetPathParam("datasetName", o.DatasetName); err != nil {
		return err
	}

	// path param wallet
	if err := r.SetPathParam("wallet", o.Wallet); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
