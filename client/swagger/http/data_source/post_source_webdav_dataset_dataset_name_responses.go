// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostSourceWebdavDatasetDatasetNameReader is a Reader for the PostSourceWebdavDatasetDatasetName structure.
type PostSourceWebdavDatasetDatasetNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSourceWebdavDatasetDatasetNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSourceWebdavDatasetDatasetNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSourceWebdavDatasetDatasetNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSourceWebdavDatasetDatasetNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /source/webdav/dataset/{datasetName}] PostSourceWebdavDatasetDatasetName", response, response.Code())
	}
}

// NewPostSourceWebdavDatasetDatasetNameOK creates a PostSourceWebdavDatasetDatasetNameOK with default headers values
func NewPostSourceWebdavDatasetDatasetNameOK() *PostSourceWebdavDatasetDatasetNameOK {
	return &PostSourceWebdavDatasetDatasetNameOK{}
}

/*
PostSourceWebdavDatasetDatasetNameOK describes a response with status code 200, with default header values.

OK
*/
type PostSourceWebdavDatasetDatasetNameOK struct {
	Payload *models.ModelSource
}

// IsSuccess returns true when this post source webdav dataset dataset name o k response has a 2xx status code
func (o *PostSourceWebdavDatasetDatasetNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post source webdav dataset dataset name o k response has a 3xx status code
func (o *PostSourceWebdavDatasetDatasetNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source webdav dataset dataset name o k response has a 4xx status code
func (o *PostSourceWebdavDatasetDatasetNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source webdav dataset dataset name o k response has a 5xx status code
func (o *PostSourceWebdavDatasetDatasetNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post source webdav dataset dataset name o k response a status code equal to that given
func (o *PostSourceWebdavDatasetDatasetNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post source webdav dataset dataset name o k response
func (o *PostSourceWebdavDatasetDatasetNameOK) Code() int {
	return 200
}

func (o *PostSourceWebdavDatasetDatasetNameOK) Error() string {
	return fmt.Sprintf("[POST /source/webdav/dataset/{datasetName}][%d] postSourceWebdavDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceWebdavDatasetDatasetNameOK) String() string {
	return fmt.Sprintf("[POST /source/webdav/dataset/{datasetName}][%d] postSourceWebdavDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceWebdavDatasetDatasetNameOK) GetPayload() *models.ModelSource {
	return o.Payload
}

func (o *PostSourceWebdavDatasetDatasetNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceWebdavDatasetDatasetNameBadRequest creates a PostSourceWebdavDatasetDatasetNameBadRequest with default headers values
func NewPostSourceWebdavDatasetDatasetNameBadRequest() *PostSourceWebdavDatasetDatasetNameBadRequest {
	return &PostSourceWebdavDatasetDatasetNameBadRequest{}
}

/*
PostSourceWebdavDatasetDatasetNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSourceWebdavDatasetDatasetNameBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source webdav dataset dataset name bad request response has a 2xx status code
func (o *PostSourceWebdavDatasetDatasetNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source webdav dataset dataset name bad request response has a 3xx status code
func (o *PostSourceWebdavDatasetDatasetNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source webdav dataset dataset name bad request response has a 4xx status code
func (o *PostSourceWebdavDatasetDatasetNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post source webdav dataset dataset name bad request response has a 5xx status code
func (o *PostSourceWebdavDatasetDatasetNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post source webdav dataset dataset name bad request response a status code equal to that given
func (o *PostSourceWebdavDatasetDatasetNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post source webdav dataset dataset name bad request response
func (o *PostSourceWebdavDatasetDatasetNameBadRequest) Code() int {
	return 400
}

func (o *PostSourceWebdavDatasetDatasetNameBadRequest) Error() string {
	return fmt.Sprintf("[POST /source/webdav/dataset/{datasetName}][%d] postSourceWebdavDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceWebdavDatasetDatasetNameBadRequest) String() string {
	return fmt.Sprintf("[POST /source/webdav/dataset/{datasetName}][%d] postSourceWebdavDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceWebdavDatasetDatasetNameBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceWebdavDatasetDatasetNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceWebdavDatasetDatasetNameInternalServerError creates a PostSourceWebdavDatasetDatasetNameInternalServerError with default headers values
func NewPostSourceWebdavDatasetDatasetNameInternalServerError() *PostSourceWebdavDatasetDatasetNameInternalServerError {
	return &PostSourceWebdavDatasetDatasetNameInternalServerError{}
}

/*
PostSourceWebdavDatasetDatasetNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSourceWebdavDatasetDatasetNameInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source webdav dataset dataset name internal server error response has a 2xx status code
func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source webdav dataset dataset name internal server error response has a 3xx status code
func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source webdav dataset dataset name internal server error response has a 4xx status code
func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source webdav dataset dataset name internal server error response has a 5xx status code
func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post source webdav dataset dataset name internal server error response a status code equal to that given
func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post source webdav dataset dataset name internal server error response
func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) Code() int {
	return 500
}

func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) Error() string {
	return fmt.Sprintf("[POST /source/webdav/dataset/{datasetName}][%d] postSourceWebdavDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) String() string {
	return fmt.Sprintf("[POST /source/webdav/dataset/{datasetName}][%d] postSourceWebdavDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceWebdavDatasetDatasetNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
