// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostChunkIDPackReader is a Reader for the PostChunkIDPack structure.
type PostChunkIDPackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostChunkIDPackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostChunkIDPackCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostChunkIDPackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostChunkIDPackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /chunk/{id}/pack] PostChunkIDPack", response, response.Code())
	}
}

// NewPostChunkIDPackCreated creates a PostChunkIDPackCreated with default headers values
func NewPostChunkIDPackCreated() *PostChunkIDPackCreated {
	return &PostChunkIDPackCreated{}
}

/*
PostChunkIDPackCreated describes a response with status code 201, with default header values.

Created
*/
type PostChunkIDPackCreated struct {
	Payload []*models.ModelCar
}

// IsSuccess returns true when this post chunk Id pack created response has a 2xx status code
func (o *PostChunkIDPackCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post chunk Id pack created response has a 3xx status code
func (o *PostChunkIDPackCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post chunk Id pack created response has a 4xx status code
func (o *PostChunkIDPackCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post chunk Id pack created response has a 5xx status code
func (o *PostChunkIDPackCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post chunk Id pack created response a status code equal to that given
func (o *PostChunkIDPackCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post chunk Id pack created response
func (o *PostChunkIDPackCreated) Code() int {
	return 201
}

func (o *PostChunkIDPackCreated) Error() string {
	return fmt.Sprintf("[POST /chunk/{id}/pack][%d] postChunkIdPackCreated  %+v", 201, o.Payload)
}

func (o *PostChunkIDPackCreated) String() string {
	return fmt.Sprintf("[POST /chunk/{id}/pack][%d] postChunkIdPackCreated  %+v", 201, o.Payload)
}

func (o *PostChunkIDPackCreated) GetPayload() []*models.ModelCar {
	return o.Payload
}

func (o *PostChunkIDPackCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostChunkIDPackBadRequest creates a PostChunkIDPackBadRequest with default headers values
func NewPostChunkIDPackBadRequest() *PostChunkIDPackBadRequest {
	return &PostChunkIDPackBadRequest{}
}

/*
PostChunkIDPackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostChunkIDPackBadRequest struct {
	Payload string
}

// IsSuccess returns true when this post chunk Id pack bad request response has a 2xx status code
func (o *PostChunkIDPackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post chunk Id pack bad request response has a 3xx status code
func (o *PostChunkIDPackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post chunk Id pack bad request response has a 4xx status code
func (o *PostChunkIDPackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post chunk Id pack bad request response has a 5xx status code
func (o *PostChunkIDPackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post chunk Id pack bad request response a status code equal to that given
func (o *PostChunkIDPackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post chunk Id pack bad request response
func (o *PostChunkIDPackBadRequest) Code() int {
	return 400
}

func (o *PostChunkIDPackBadRequest) Error() string {
	return fmt.Sprintf("[POST /chunk/{id}/pack][%d] postChunkIdPackBadRequest  %+v", 400, o.Payload)
}

func (o *PostChunkIDPackBadRequest) String() string {
	return fmt.Sprintf("[POST /chunk/{id}/pack][%d] postChunkIdPackBadRequest  %+v", 400, o.Payload)
}

func (o *PostChunkIDPackBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PostChunkIDPackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostChunkIDPackInternalServerError creates a PostChunkIDPackInternalServerError with default headers values
func NewPostChunkIDPackInternalServerError() *PostChunkIDPackInternalServerError {
	return &PostChunkIDPackInternalServerError{}
}

/*
PostChunkIDPackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostChunkIDPackInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this post chunk Id pack internal server error response has a 2xx status code
func (o *PostChunkIDPackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post chunk Id pack internal server error response has a 3xx status code
func (o *PostChunkIDPackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post chunk Id pack internal server error response has a 4xx status code
func (o *PostChunkIDPackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post chunk Id pack internal server error response has a 5xx status code
func (o *PostChunkIDPackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post chunk Id pack internal server error response a status code equal to that given
func (o *PostChunkIDPackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post chunk Id pack internal server error response
func (o *PostChunkIDPackInternalServerError) Code() int {
	return 500
}

func (o *PostChunkIDPackInternalServerError) Error() string {
	return fmt.Sprintf("[POST /chunk/{id}/pack][%d] postChunkIdPackInternalServerError  %+v", 500, o.Payload)
}

func (o *PostChunkIDPackInternalServerError) String() string {
	return fmt.Sprintf("[POST /chunk/{id}/pack][%d] postChunkIdPackInternalServerError  %+v", 500, o.Payload)
}

func (o *PostChunkIDPackInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PostChunkIDPackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
