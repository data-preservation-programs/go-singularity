// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostSourceSeafileDatasetDatasetNameReader is a Reader for the PostSourceSeafileDatasetDatasetName structure.
type PostSourceSeafileDatasetDatasetNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSourceSeafileDatasetDatasetNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSourceSeafileDatasetDatasetNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSourceSeafileDatasetDatasetNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSourceSeafileDatasetDatasetNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /source/seafile/dataset/{datasetName}] PostSourceSeafileDatasetDatasetName", response, response.Code())
	}
}

// NewPostSourceSeafileDatasetDatasetNameOK creates a PostSourceSeafileDatasetDatasetNameOK with default headers values
func NewPostSourceSeafileDatasetDatasetNameOK() *PostSourceSeafileDatasetDatasetNameOK {
	return &PostSourceSeafileDatasetDatasetNameOK{}
}

/*
PostSourceSeafileDatasetDatasetNameOK describes a response with status code 200, with default header values.

OK
*/
type PostSourceSeafileDatasetDatasetNameOK struct {
	Payload *models.ModelSource
}

// IsSuccess returns true when this post source seafile dataset dataset name o k response has a 2xx status code
func (o *PostSourceSeafileDatasetDatasetNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post source seafile dataset dataset name o k response has a 3xx status code
func (o *PostSourceSeafileDatasetDatasetNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source seafile dataset dataset name o k response has a 4xx status code
func (o *PostSourceSeafileDatasetDatasetNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source seafile dataset dataset name o k response has a 5xx status code
func (o *PostSourceSeafileDatasetDatasetNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post source seafile dataset dataset name o k response a status code equal to that given
func (o *PostSourceSeafileDatasetDatasetNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post source seafile dataset dataset name o k response
func (o *PostSourceSeafileDatasetDatasetNameOK) Code() int {
	return 200
}

func (o *PostSourceSeafileDatasetDatasetNameOK) Error() string {
	return fmt.Sprintf("[POST /source/seafile/dataset/{datasetName}][%d] postSourceSeafileDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceSeafileDatasetDatasetNameOK) String() string {
	return fmt.Sprintf("[POST /source/seafile/dataset/{datasetName}][%d] postSourceSeafileDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceSeafileDatasetDatasetNameOK) GetPayload() *models.ModelSource {
	return o.Payload
}

func (o *PostSourceSeafileDatasetDatasetNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceSeafileDatasetDatasetNameBadRequest creates a PostSourceSeafileDatasetDatasetNameBadRequest with default headers values
func NewPostSourceSeafileDatasetDatasetNameBadRequest() *PostSourceSeafileDatasetDatasetNameBadRequest {
	return &PostSourceSeafileDatasetDatasetNameBadRequest{}
}

/*
PostSourceSeafileDatasetDatasetNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSourceSeafileDatasetDatasetNameBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source seafile dataset dataset name bad request response has a 2xx status code
func (o *PostSourceSeafileDatasetDatasetNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source seafile dataset dataset name bad request response has a 3xx status code
func (o *PostSourceSeafileDatasetDatasetNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source seafile dataset dataset name bad request response has a 4xx status code
func (o *PostSourceSeafileDatasetDatasetNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post source seafile dataset dataset name bad request response has a 5xx status code
func (o *PostSourceSeafileDatasetDatasetNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post source seafile dataset dataset name bad request response a status code equal to that given
func (o *PostSourceSeafileDatasetDatasetNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post source seafile dataset dataset name bad request response
func (o *PostSourceSeafileDatasetDatasetNameBadRequest) Code() int {
	return 400
}

func (o *PostSourceSeafileDatasetDatasetNameBadRequest) Error() string {
	return fmt.Sprintf("[POST /source/seafile/dataset/{datasetName}][%d] postSourceSeafileDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceSeafileDatasetDatasetNameBadRequest) String() string {
	return fmt.Sprintf("[POST /source/seafile/dataset/{datasetName}][%d] postSourceSeafileDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceSeafileDatasetDatasetNameBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceSeafileDatasetDatasetNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceSeafileDatasetDatasetNameInternalServerError creates a PostSourceSeafileDatasetDatasetNameInternalServerError with default headers values
func NewPostSourceSeafileDatasetDatasetNameInternalServerError() *PostSourceSeafileDatasetDatasetNameInternalServerError {
	return &PostSourceSeafileDatasetDatasetNameInternalServerError{}
}

/*
PostSourceSeafileDatasetDatasetNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSourceSeafileDatasetDatasetNameInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source seafile dataset dataset name internal server error response has a 2xx status code
func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source seafile dataset dataset name internal server error response has a 3xx status code
func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source seafile dataset dataset name internal server error response has a 4xx status code
func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source seafile dataset dataset name internal server error response has a 5xx status code
func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post source seafile dataset dataset name internal server error response a status code equal to that given
func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post source seafile dataset dataset name internal server error response
func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) Code() int {
	return 500
}

func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) Error() string {
	return fmt.Sprintf("[POST /source/seafile/dataset/{datasetName}][%d] postSourceSeafileDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) String() string {
	return fmt.Sprintf("[POST /source/seafile/dataset/{datasetName}][%d] postSourceSeafileDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceSeafileDatasetDatasetNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
