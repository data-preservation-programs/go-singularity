// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostSourceB2DatasetDatasetNameReader is a Reader for the PostSourceB2DatasetDatasetName structure.
type PostSourceB2DatasetDatasetNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSourceB2DatasetDatasetNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSourceB2DatasetDatasetNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSourceB2DatasetDatasetNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSourceB2DatasetDatasetNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /source/b2/dataset/{datasetName}] PostSourceB2DatasetDatasetName", response, response.Code())
	}
}

// NewPostSourceB2DatasetDatasetNameOK creates a PostSourceB2DatasetDatasetNameOK with default headers values
func NewPostSourceB2DatasetDatasetNameOK() *PostSourceB2DatasetDatasetNameOK {
	return &PostSourceB2DatasetDatasetNameOK{}
}

/*
PostSourceB2DatasetDatasetNameOK describes a response with status code 200, with default header values.

OK
*/
type PostSourceB2DatasetDatasetNameOK struct {
	Payload *models.ModelSource
}

// IsSuccess returns true when this post source b2 dataset dataset name o k response has a 2xx status code
func (o *PostSourceB2DatasetDatasetNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post source b2 dataset dataset name o k response has a 3xx status code
func (o *PostSourceB2DatasetDatasetNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source b2 dataset dataset name o k response has a 4xx status code
func (o *PostSourceB2DatasetDatasetNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source b2 dataset dataset name o k response has a 5xx status code
func (o *PostSourceB2DatasetDatasetNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post source b2 dataset dataset name o k response a status code equal to that given
func (o *PostSourceB2DatasetDatasetNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post source b2 dataset dataset name o k response
func (o *PostSourceB2DatasetDatasetNameOK) Code() int {
	return 200
}

func (o *PostSourceB2DatasetDatasetNameOK) Error() string {
	return fmt.Sprintf("[POST /source/b2/dataset/{datasetName}][%d] postSourceB2DatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceB2DatasetDatasetNameOK) String() string {
	return fmt.Sprintf("[POST /source/b2/dataset/{datasetName}][%d] postSourceB2DatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceB2DatasetDatasetNameOK) GetPayload() *models.ModelSource {
	return o.Payload
}

func (o *PostSourceB2DatasetDatasetNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceB2DatasetDatasetNameBadRequest creates a PostSourceB2DatasetDatasetNameBadRequest with default headers values
func NewPostSourceB2DatasetDatasetNameBadRequest() *PostSourceB2DatasetDatasetNameBadRequest {
	return &PostSourceB2DatasetDatasetNameBadRequest{}
}

/*
PostSourceB2DatasetDatasetNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSourceB2DatasetDatasetNameBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source b2 dataset dataset name bad request response has a 2xx status code
func (o *PostSourceB2DatasetDatasetNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source b2 dataset dataset name bad request response has a 3xx status code
func (o *PostSourceB2DatasetDatasetNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source b2 dataset dataset name bad request response has a 4xx status code
func (o *PostSourceB2DatasetDatasetNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post source b2 dataset dataset name bad request response has a 5xx status code
func (o *PostSourceB2DatasetDatasetNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post source b2 dataset dataset name bad request response a status code equal to that given
func (o *PostSourceB2DatasetDatasetNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post source b2 dataset dataset name bad request response
func (o *PostSourceB2DatasetDatasetNameBadRequest) Code() int {
	return 400
}

func (o *PostSourceB2DatasetDatasetNameBadRequest) Error() string {
	return fmt.Sprintf("[POST /source/b2/dataset/{datasetName}][%d] postSourceB2DatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceB2DatasetDatasetNameBadRequest) String() string {
	return fmt.Sprintf("[POST /source/b2/dataset/{datasetName}][%d] postSourceB2DatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceB2DatasetDatasetNameBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceB2DatasetDatasetNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceB2DatasetDatasetNameInternalServerError creates a PostSourceB2DatasetDatasetNameInternalServerError with default headers values
func NewPostSourceB2DatasetDatasetNameInternalServerError() *PostSourceB2DatasetDatasetNameInternalServerError {
	return &PostSourceB2DatasetDatasetNameInternalServerError{}
}

/*
PostSourceB2DatasetDatasetNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSourceB2DatasetDatasetNameInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source b2 dataset dataset name internal server error response has a 2xx status code
func (o *PostSourceB2DatasetDatasetNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source b2 dataset dataset name internal server error response has a 3xx status code
func (o *PostSourceB2DatasetDatasetNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source b2 dataset dataset name internal server error response has a 4xx status code
func (o *PostSourceB2DatasetDatasetNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source b2 dataset dataset name internal server error response has a 5xx status code
func (o *PostSourceB2DatasetDatasetNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post source b2 dataset dataset name internal server error response a status code equal to that given
func (o *PostSourceB2DatasetDatasetNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post source b2 dataset dataset name internal server error response
func (o *PostSourceB2DatasetDatasetNameInternalServerError) Code() int {
	return 500
}

func (o *PostSourceB2DatasetDatasetNameInternalServerError) Error() string {
	return fmt.Sprintf("[POST /source/b2/dataset/{datasetName}][%d] postSourceB2DatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceB2DatasetDatasetNameInternalServerError) String() string {
	return fmt.Sprintf("[POST /source/b2/dataset/{datasetName}][%d] postSourceB2DatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceB2DatasetDatasetNameInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceB2DatasetDatasetNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
