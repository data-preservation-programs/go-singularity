// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostSourceIDChunkReader is a Reader for the PostSourceIDChunk structure.
type PostSourceIDChunkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSourceIDChunkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostSourceIDChunkCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSourceIDChunkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSourceIDChunkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /source/{id}/chunk] PostSourceIDChunk", response, response.Code())
	}
}

// NewPostSourceIDChunkCreated creates a PostSourceIDChunkCreated with default headers values
func NewPostSourceIDChunkCreated() *PostSourceIDChunkCreated {
	return &PostSourceIDChunkCreated{}
}

/*
PostSourceIDChunkCreated describes a response with status code 201, with default header values.

Created
*/
type PostSourceIDChunkCreated struct {
	Payload *models.ModelItem
}

// IsSuccess returns true when this post source Id chunk created response has a 2xx status code
func (o *PostSourceIDChunkCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post source Id chunk created response has a 3xx status code
func (o *PostSourceIDChunkCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source Id chunk created response has a 4xx status code
func (o *PostSourceIDChunkCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source Id chunk created response has a 5xx status code
func (o *PostSourceIDChunkCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post source Id chunk created response a status code equal to that given
func (o *PostSourceIDChunkCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post source Id chunk created response
func (o *PostSourceIDChunkCreated) Code() int {
	return 201
}

func (o *PostSourceIDChunkCreated) Error() string {
	return fmt.Sprintf("[POST /source/{id}/chunk][%d] postSourceIdChunkCreated  %+v", 201, o.Payload)
}

func (o *PostSourceIDChunkCreated) String() string {
	return fmt.Sprintf("[POST /source/{id}/chunk][%d] postSourceIdChunkCreated  %+v", 201, o.Payload)
}

func (o *PostSourceIDChunkCreated) GetPayload() *models.ModelItem {
	return o.Payload
}

func (o *PostSourceIDChunkCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelItem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceIDChunkBadRequest creates a PostSourceIDChunkBadRequest with default headers values
func NewPostSourceIDChunkBadRequest() *PostSourceIDChunkBadRequest {
	return &PostSourceIDChunkBadRequest{}
}

/*
PostSourceIDChunkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSourceIDChunkBadRequest struct {
	Payload string
}

// IsSuccess returns true when this post source Id chunk bad request response has a 2xx status code
func (o *PostSourceIDChunkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source Id chunk bad request response has a 3xx status code
func (o *PostSourceIDChunkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source Id chunk bad request response has a 4xx status code
func (o *PostSourceIDChunkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post source Id chunk bad request response has a 5xx status code
func (o *PostSourceIDChunkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post source Id chunk bad request response a status code equal to that given
func (o *PostSourceIDChunkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post source Id chunk bad request response
func (o *PostSourceIDChunkBadRequest) Code() int {
	return 400
}

func (o *PostSourceIDChunkBadRequest) Error() string {
	return fmt.Sprintf("[POST /source/{id}/chunk][%d] postSourceIdChunkBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceIDChunkBadRequest) String() string {
	return fmt.Sprintf("[POST /source/{id}/chunk][%d] postSourceIdChunkBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceIDChunkBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PostSourceIDChunkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceIDChunkInternalServerError creates a PostSourceIDChunkInternalServerError with default headers values
func NewPostSourceIDChunkInternalServerError() *PostSourceIDChunkInternalServerError {
	return &PostSourceIDChunkInternalServerError{}
}

/*
PostSourceIDChunkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSourceIDChunkInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this post source Id chunk internal server error response has a 2xx status code
func (o *PostSourceIDChunkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source Id chunk internal server error response has a 3xx status code
func (o *PostSourceIDChunkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source Id chunk internal server error response has a 4xx status code
func (o *PostSourceIDChunkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source Id chunk internal server error response has a 5xx status code
func (o *PostSourceIDChunkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post source Id chunk internal server error response a status code equal to that given
func (o *PostSourceIDChunkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post source Id chunk internal server error response
func (o *PostSourceIDChunkInternalServerError) Code() int {
	return 500
}

func (o *PostSourceIDChunkInternalServerError) Error() string {
	return fmt.Sprintf("[POST /source/{id}/chunk][%d] postSourceIdChunkInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceIDChunkInternalServerError) String() string {
	return fmt.Sprintf("[POST /source/{id}/chunk][%d] postSourceIdChunkInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceIDChunkInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PostSourceIDChunkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
