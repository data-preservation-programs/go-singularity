// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostSourceS3DatasetDatasetNameReader is a Reader for the PostSourceS3DatasetDatasetName structure.
type PostSourceS3DatasetDatasetNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSourceS3DatasetDatasetNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSourceS3DatasetDatasetNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSourceS3DatasetDatasetNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSourceS3DatasetDatasetNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /source/s3/dataset/{datasetName}] PostSourceS3DatasetDatasetName", response, response.Code())
	}
}

// NewPostSourceS3DatasetDatasetNameOK creates a PostSourceS3DatasetDatasetNameOK with default headers values
func NewPostSourceS3DatasetDatasetNameOK() *PostSourceS3DatasetDatasetNameOK {
	return &PostSourceS3DatasetDatasetNameOK{}
}

/*
PostSourceS3DatasetDatasetNameOK describes a response with status code 200, with default header values.

OK
*/
type PostSourceS3DatasetDatasetNameOK struct {
	Payload *models.ModelSource
}

// IsSuccess returns true when this post source s3 dataset dataset name o k response has a 2xx status code
func (o *PostSourceS3DatasetDatasetNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post source s3 dataset dataset name o k response has a 3xx status code
func (o *PostSourceS3DatasetDatasetNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source s3 dataset dataset name o k response has a 4xx status code
func (o *PostSourceS3DatasetDatasetNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source s3 dataset dataset name o k response has a 5xx status code
func (o *PostSourceS3DatasetDatasetNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post source s3 dataset dataset name o k response a status code equal to that given
func (o *PostSourceS3DatasetDatasetNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post source s3 dataset dataset name o k response
func (o *PostSourceS3DatasetDatasetNameOK) Code() int {
	return 200
}

func (o *PostSourceS3DatasetDatasetNameOK) Error() string {
	return fmt.Sprintf("[POST /source/s3/dataset/{datasetName}][%d] postSourceS3DatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceS3DatasetDatasetNameOK) String() string {
	return fmt.Sprintf("[POST /source/s3/dataset/{datasetName}][%d] postSourceS3DatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceS3DatasetDatasetNameOK) GetPayload() *models.ModelSource {
	return o.Payload
}

func (o *PostSourceS3DatasetDatasetNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceS3DatasetDatasetNameBadRequest creates a PostSourceS3DatasetDatasetNameBadRequest with default headers values
func NewPostSourceS3DatasetDatasetNameBadRequest() *PostSourceS3DatasetDatasetNameBadRequest {
	return &PostSourceS3DatasetDatasetNameBadRequest{}
}

/*
PostSourceS3DatasetDatasetNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSourceS3DatasetDatasetNameBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source s3 dataset dataset name bad request response has a 2xx status code
func (o *PostSourceS3DatasetDatasetNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source s3 dataset dataset name bad request response has a 3xx status code
func (o *PostSourceS3DatasetDatasetNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source s3 dataset dataset name bad request response has a 4xx status code
func (o *PostSourceS3DatasetDatasetNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post source s3 dataset dataset name bad request response has a 5xx status code
func (o *PostSourceS3DatasetDatasetNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post source s3 dataset dataset name bad request response a status code equal to that given
func (o *PostSourceS3DatasetDatasetNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post source s3 dataset dataset name bad request response
func (o *PostSourceS3DatasetDatasetNameBadRequest) Code() int {
	return 400
}

func (o *PostSourceS3DatasetDatasetNameBadRequest) Error() string {
	return fmt.Sprintf("[POST /source/s3/dataset/{datasetName}][%d] postSourceS3DatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceS3DatasetDatasetNameBadRequest) String() string {
	return fmt.Sprintf("[POST /source/s3/dataset/{datasetName}][%d] postSourceS3DatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceS3DatasetDatasetNameBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceS3DatasetDatasetNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceS3DatasetDatasetNameInternalServerError creates a PostSourceS3DatasetDatasetNameInternalServerError with default headers values
func NewPostSourceS3DatasetDatasetNameInternalServerError() *PostSourceS3DatasetDatasetNameInternalServerError {
	return &PostSourceS3DatasetDatasetNameInternalServerError{}
}

/*
PostSourceS3DatasetDatasetNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSourceS3DatasetDatasetNameInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source s3 dataset dataset name internal server error response has a 2xx status code
func (o *PostSourceS3DatasetDatasetNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source s3 dataset dataset name internal server error response has a 3xx status code
func (o *PostSourceS3DatasetDatasetNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source s3 dataset dataset name internal server error response has a 4xx status code
func (o *PostSourceS3DatasetDatasetNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source s3 dataset dataset name internal server error response has a 5xx status code
func (o *PostSourceS3DatasetDatasetNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post source s3 dataset dataset name internal server error response a status code equal to that given
func (o *PostSourceS3DatasetDatasetNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post source s3 dataset dataset name internal server error response
func (o *PostSourceS3DatasetDatasetNameInternalServerError) Code() int {
	return 500
}

func (o *PostSourceS3DatasetDatasetNameInternalServerError) Error() string {
	return fmt.Sprintf("[POST /source/s3/dataset/{datasetName}][%d] postSourceS3DatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceS3DatasetDatasetNameInternalServerError) String() string {
	return fmt.Sprintf("[POST /source/s3/dataset/{datasetName}][%d] postSourceS3DatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceS3DatasetDatasetNameInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceS3DatasetDatasetNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
