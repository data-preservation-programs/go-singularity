// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetSourceReader is a Reader for the GetSource structure.
type GetSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /source] GetSource", response, response.Code())
	}
}

// NewGetSourceOK creates a GetSourceOK with default headers values
func NewGetSourceOK() *GetSourceOK {
	return &GetSourceOK{}
}

/*
GetSourceOK describes a response with status code 200, with default header values.

OK
*/
type GetSourceOK struct {
	Payload []*models.ModelSource
}

// IsSuccess returns true when this get source o k response has a 2xx status code
func (o *GetSourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get source o k response has a 3xx status code
func (o *GetSourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get source o k response has a 4xx status code
func (o *GetSourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get source o k response has a 5xx status code
func (o *GetSourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get source o k response a status code equal to that given
func (o *GetSourceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get source o k response
func (o *GetSourceOK) Code() int {
	return 200
}

func (o *GetSourceOK) Error() string {
	return fmt.Sprintf("[GET /source][%d] getSourceOK  %+v", 200, o.Payload)
}

func (o *GetSourceOK) String() string {
	return fmt.Sprintf("[GET /source][%d] getSourceOK  %+v", 200, o.Payload)
}

func (o *GetSourceOK) GetPayload() []*models.ModelSource {
	return o.Payload
}

func (o *GetSourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSourceBadRequest creates a GetSourceBadRequest with default headers values
func NewGetSourceBadRequest() *GetSourceBadRequest {
	return &GetSourceBadRequest{}
}

/*
GetSourceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetSourceBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get source bad request response has a 2xx status code
func (o *GetSourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get source bad request response has a 3xx status code
func (o *GetSourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get source bad request response has a 4xx status code
func (o *GetSourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get source bad request response has a 5xx status code
func (o *GetSourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get source bad request response a status code equal to that given
func (o *GetSourceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get source bad request response
func (o *GetSourceBadRequest) Code() int {
	return 400
}

func (o *GetSourceBadRequest) Error() string {
	return fmt.Sprintf("[GET /source][%d] getSourceBadRequest  %+v", 400, o.Payload)
}

func (o *GetSourceBadRequest) String() string {
	return fmt.Sprintf("[GET /source][%d] getSourceBadRequest  %+v", 400, o.Payload)
}

func (o *GetSourceBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetSourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSourceInternalServerError creates a GetSourceInternalServerError with default headers values
func NewGetSourceInternalServerError() *GetSourceInternalServerError {
	return &GetSourceInternalServerError{}
}

/*
GetSourceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSourceInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get source internal server error response has a 2xx status code
func (o *GetSourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get source internal server error response has a 3xx status code
func (o *GetSourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get source internal server error response has a 4xx status code
func (o *GetSourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get source internal server error response has a 5xx status code
func (o *GetSourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get source internal server error response a status code equal to that given
func (o *GetSourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get source internal server error response
func (o *GetSourceInternalServerError) Code() int {
	return 500
}

func (o *GetSourceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /source][%d] getSourceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSourceInternalServerError) String() string {
	return fmt.Sprintf("[GET /source][%d] getSourceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSourceInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetSourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
