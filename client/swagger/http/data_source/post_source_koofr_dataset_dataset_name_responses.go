// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostSourceKoofrDatasetDatasetNameReader is a Reader for the PostSourceKoofrDatasetDatasetName structure.
type PostSourceKoofrDatasetDatasetNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSourceKoofrDatasetDatasetNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSourceKoofrDatasetDatasetNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSourceKoofrDatasetDatasetNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSourceKoofrDatasetDatasetNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /source/koofr/dataset/{datasetName}] PostSourceKoofrDatasetDatasetName", response, response.Code())
	}
}

// NewPostSourceKoofrDatasetDatasetNameOK creates a PostSourceKoofrDatasetDatasetNameOK with default headers values
func NewPostSourceKoofrDatasetDatasetNameOK() *PostSourceKoofrDatasetDatasetNameOK {
	return &PostSourceKoofrDatasetDatasetNameOK{}
}

/*
PostSourceKoofrDatasetDatasetNameOK describes a response with status code 200, with default header values.

OK
*/
type PostSourceKoofrDatasetDatasetNameOK struct {
	Payload *models.ModelSource
}

// IsSuccess returns true when this post source koofr dataset dataset name o k response has a 2xx status code
func (o *PostSourceKoofrDatasetDatasetNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post source koofr dataset dataset name o k response has a 3xx status code
func (o *PostSourceKoofrDatasetDatasetNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source koofr dataset dataset name o k response has a 4xx status code
func (o *PostSourceKoofrDatasetDatasetNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source koofr dataset dataset name o k response has a 5xx status code
func (o *PostSourceKoofrDatasetDatasetNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post source koofr dataset dataset name o k response a status code equal to that given
func (o *PostSourceKoofrDatasetDatasetNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post source koofr dataset dataset name o k response
func (o *PostSourceKoofrDatasetDatasetNameOK) Code() int {
	return 200
}

func (o *PostSourceKoofrDatasetDatasetNameOK) Error() string {
	return fmt.Sprintf("[POST /source/koofr/dataset/{datasetName}][%d] postSourceKoofrDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceKoofrDatasetDatasetNameOK) String() string {
	return fmt.Sprintf("[POST /source/koofr/dataset/{datasetName}][%d] postSourceKoofrDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceKoofrDatasetDatasetNameOK) GetPayload() *models.ModelSource {
	return o.Payload
}

func (o *PostSourceKoofrDatasetDatasetNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceKoofrDatasetDatasetNameBadRequest creates a PostSourceKoofrDatasetDatasetNameBadRequest with default headers values
func NewPostSourceKoofrDatasetDatasetNameBadRequest() *PostSourceKoofrDatasetDatasetNameBadRequest {
	return &PostSourceKoofrDatasetDatasetNameBadRequest{}
}

/*
PostSourceKoofrDatasetDatasetNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSourceKoofrDatasetDatasetNameBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source koofr dataset dataset name bad request response has a 2xx status code
func (o *PostSourceKoofrDatasetDatasetNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source koofr dataset dataset name bad request response has a 3xx status code
func (o *PostSourceKoofrDatasetDatasetNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source koofr dataset dataset name bad request response has a 4xx status code
func (o *PostSourceKoofrDatasetDatasetNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post source koofr dataset dataset name bad request response has a 5xx status code
func (o *PostSourceKoofrDatasetDatasetNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post source koofr dataset dataset name bad request response a status code equal to that given
func (o *PostSourceKoofrDatasetDatasetNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post source koofr dataset dataset name bad request response
func (o *PostSourceKoofrDatasetDatasetNameBadRequest) Code() int {
	return 400
}

func (o *PostSourceKoofrDatasetDatasetNameBadRequest) Error() string {
	return fmt.Sprintf("[POST /source/koofr/dataset/{datasetName}][%d] postSourceKoofrDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceKoofrDatasetDatasetNameBadRequest) String() string {
	return fmt.Sprintf("[POST /source/koofr/dataset/{datasetName}][%d] postSourceKoofrDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceKoofrDatasetDatasetNameBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceKoofrDatasetDatasetNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceKoofrDatasetDatasetNameInternalServerError creates a PostSourceKoofrDatasetDatasetNameInternalServerError with default headers values
func NewPostSourceKoofrDatasetDatasetNameInternalServerError() *PostSourceKoofrDatasetDatasetNameInternalServerError {
	return &PostSourceKoofrDatasetDatasetNameInternalServerError{}
}

/*
PostSourceKoofrDatasetDatasetNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSourceKoofrDatasetDatasetNameInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source koofr dataset dataset name internal server error response has a 2xx status code
func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source koofr dataset dataset name internal server error response has a 3xx status code
func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source koofr dataset dataset name internal server error response has a 4xx status code
func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source koofr dataset dataset name internal server error response has a 5xx status code
func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post source koofr dataset dataset name internal server error response a status code equal to that given
func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post source koofr dataset dataset name internal server error response
func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) Code() int {
	return 500
}

func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) Error() string {
	return fmt.Sprintf("[POST /source/koofr/dataset/{datasetName}][%d] postSourceKoofrDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) String() string {
	return fmt.Sprintf("[POST /source/koofr/dataset/{datasetName}][%d] postSourceKoofrDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceKoofrDatasetDatasetNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
