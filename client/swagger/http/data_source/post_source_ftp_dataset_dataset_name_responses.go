// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostSourceFtpDatasetDatasetNameReader is a Reader for the PostSourceFtpDatasetDatasetName structure.
type PostSourceFtpDatasetDatasetNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSourceFtpDatasetDatasetNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSourceFtpDatasetDatasetNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSourceFtpDatasetDatasetNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSourceFtpDatasetDatasetNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /source/ftp/dataset/{datasetName}] PostSourceFtpDatasetDatasetName", response, response.Code())
	}
}

// NewPostSourceFtpDatasetDatasetNameOK creates a PostSourceFtpDatasetDatasetNameOK with default headers values
func NewPostSourceFtpDatasetDatasetNameOK() *PostSourceFtpDatasetDatasetNameOK {
	return &PostSourceFtpDatasetDatasetNameOK{}
}

/*
PostSourceFtpDatasetDatasetNameOK describes a response with status code 200, with default header values.

OK
*/
type PostSourceFtpDatasetDatasetNameOK struct {
	Payload *models.ModelSource
}

// IsSuccess returns true when this post source ftp dataset dataset name o k response has a 2xx status code
func (o *PostSourceFtpDatasetDatasetNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post source ftp dataset dataset name o k response has a 3xx status code
func (o *PostSourceFtpDatasetDatasetNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source ftp dataset dataset name o k response has a 4xx status code
func (o *PostSourceFtpDatasetDatasetNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source ftp dataset dataset name o k response has a 5xx status code
func (o *PostSourceFtpDatasetDatasetNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post source ftp dataset dataset name o k response a status code equal to that given
func (o *PostSourceFtpDatasetDatasetNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post source ftp dataset dataset name o k response
func (o *PostSourceFtpDatasetDatasetNameOK) Code() int {
	return 200
}

func (o *PostSourceFtpDatasetDatasetNameOK) Error() string {
	return fmt.Sprintf("[POST /source/ftp/dataset/{datasetName}][%d] postSourceFtpDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceFtpDatasetDatasetNameOK) String() string {
	return fmt.Sprintf("[POST /source/ftp/dataset/{datasetName}][%d] postSourceFtpDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceFtpDatasetDatasetNameOK) GetPayload() *models.ModelSource {
	return o.Payload
}

func (o *PostSourceFtpDatasetDatasetNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceFtpDatasetDatasetNameBadRequest creates a PostSourceFtpDatasetDatasetNameBadRequest with default headers values
func NewPostSourceFtpDatasetDatasetNameBadRequest() *PostSourceFtpDatasetDatasetNameBadRequest {
	return &PostSourceFtpDatasetDatasetNameBadRequest{}
}

/*
PostSourceFtpDatasetDatasetNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSourceFtpDatasetDatasetNameBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source ftp dataset dataset name bad request response has a 2xx status code
func (o *PostSourceFtpDatasetDatasetNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source ftp dataset dataset name bad request response has a 3xx status code
func (o *PostSourceFtpDatasetDatasetNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source ftp dataset dataset name bad request response has a 4xx status code
func (o *PostSourceFtpDatasetDatasetNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post source ftp dataset dataset name bad request response has a 5xx status code
func (o *PostSourceFtpDatasetDatasetNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post source ftp dataset dataset name bad request response a status code equal to that given
func (o *PostSourceFtpDatasetDatasetNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post source ftp dataset dataset name bad request response
func (o *PostSourceFtpDatasetDatasetNameBadRequest) Code() int {
	return 400
}

func (o *PostSourceFtpDatasetDatasetNameBadRequest) Error() string {
	return fmt.Sprintf("[POST /source/ftp/dataset/{datasetName}][%d] postSourceFtpDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceFtpDatasetDatasetNameBadRequest) String() string {
	return fmt.Sprintf("[POST /source/ftp/dataset/{datasetName}][%d] postSourceFtpDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceFtpDatasetDatasetNameBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceFtpDatasetDatasetNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceFtpDatasetDatasetNameInternalServerError creates a PostSourceFtpDatasetDatasetNameInternalServerError with default headers values
func NewPostSourceFtpDatasetDatasetNameInternalServerError() *PostSourceFtpDatasetDatasetNameInternalServerError {
	return &PostSourceFtpDatasetDatasetNameInternalServerError{}
}

/*
PostSourceFtpDatasetDatasetNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSourceFtpDatasetDatasetNameInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source ftp dataset dataset name internal server error response has a 2xx status code
func (o *PostSourceFtpDatasetDatasetNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source ftp dataset dataset name internal server error response has a 3xx status code
func (o *PostSourceFtpDatasetDatasetNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source ftp dataset dataset name internal server error response has a 4xx status code
func (o *PostSourceFtpDatasetDatasetNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source ftp dataset dataset name internal server error response has a 5xx status code
func (o *PostSourceFtpDatasetDatasetNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post source ftp dataset dataset name internal server error response a status code equal to that given
func (o *PostSourceFtpDatasetDatasetNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post source ftp dataset dataset name internal server error response
func (o *PostSourceFtpDatasetDatasetNameInternalServerError) Code() int {
	return 500
}

func (o *PostSourceFtpDatasetDatasetNameInternalServerError) Error() string {
	return fmt.Sprintf("[POST /source/ftp/dataset/{datasetName}][%d] postSourceFtpDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceFtpDatasetDatasetNameInternalServerError) String() string {
	return fmt.Sprintf("[POST /source/ftp/dataset/{datasetName}][%d] postSourceFtpDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceFtpDatasetDatasetNameInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceFtpDatasetDatasetNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
