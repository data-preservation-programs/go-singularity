// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostSourceJottacloudDatasetDatasetNameReader is a Reader for the PostSourceJottacloudDatasetDatasetName structure.
type PostSourceJottacloudDatasetDatasetNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSourceJottacloudDatasetDatasetNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSourceJottacloudDatasetDatasetNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSourceJottacloudDatasetDatasetNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSourceJottacloudDatasetDatasetNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /source/jottacloud/dataset/{datasetName}] PostSourceJottacloudDatasetDatasetName", response, response.Code())
	}
}

// NewPostSourceJottacloudDatasetDatasetNameOK creates a PostSourceJottacloudDatasetDatasetNameOK with default headers values
func NewPostSourceJottacloudDatasetDatasetNameOK() *PostSourceJottacloudDatasetDatasetNameOK {
	return &PostSourceJottacloudDatasetDatasetNameOK{}
}

/*
PostSourceJottacloudDatasetDatasetNameOK describes a response with status code 200, with default header values.

OK
*/
type PostSourceJottacloudDatasetDatasetNameOK struct {
	Payload *models.ModelSource
}

// IsSuccess returns true when this post source jottacloud dataset dataset name o k response has a 2xx status code
func (o *PostSourceJottacloudDatasetDatasetNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post source jottacloud dataset dataset name o k response has a 3xx status code
func (o *PostSourceJottacloudDatasetDatasetNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source jottacloud dataset dataset name o k response has a 4xx status code
func (o *PostSourceJottacloudDatasetDatasetNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source jottacloud dataset dataset name o k response has a 5xx status code
func (o *PostSourceJottacloudDatasetDatasetNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post source jottacloud dataset dataset name o k response a status code equal to that given
func (o *PostSourceJottacloudDatasetDatasetNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post source jottacloud dataset dataset name o k response
func (o *PostSourceJottacloudDatasetDatasetNameOK) Code() int {
	return 200
}

func (o *PostSourceJottacloudDatasetDatasetNameOK) Error() string {
	return fmt.Sprintf("[POST /source/jottacloud/dataset/{datasetName}][%d] postSourceJottacloudDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceJottacloudDatasetDatasetNameOK) String() string {
	return fmt.Sprintf("[POST /source/jottacloud/dataset/{datasetName}][%d] postSourceJottacloudDatasetDatasetNameOK  %+v", 200, o.Payload)
}

func (o *PostSourceJottacloudDatasetDatasetNameOK) GetPayload() *models.ModelSource {
	return o.Payload
}

func (o *PostSourceJottacloudDatasetDatasetNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceJottacloudDatasetDatasetNameBadRequest creates a PostSourceJottacloudDatasetDatasetNameBadRequest with default headers values
func NewPostSourceJottacloudDatasetDatasetNameBadRequest() *PostSourceJottacloudDatasetDatasetNameBadRequest {
	return &PostSourceJottacloudDatasetDatasetNameBadRequest{}
}

/*
PostSourceJottacloudDatasetDatasetNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSourceJottacloudDatasetDatasetNameBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source jottacloud dataset dataset name bad request response has a 2xx status code
func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source jottacloud dataset dataset name bad request response has a 3xx status code
func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source jottacloud dataset dataset name bad request response has a 4xx status code
func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post source jottacloud dataset dataset name bad request response has a 5xx status code
func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post source jottacloud dataset dataset name bad request response a status code equal to that given
func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post source jottacloud dataset dataset name bad request response
func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) Code() int {
	return 400
}

func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) Error() string {
	return fmt.Sprintf("[POST /source/jottacloud/dataset/{datasetName}][%d] postSourceJottacloudDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) String() string {
	return fmt.Sprintf("[POST /source/jottacloud/dataset/{datasetName}][%d] postSourceJottacloudDatasetDatasetNameBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceJottacloudDatasetDatasetNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceJottacloudDatasetDatasetNameInternalServerError creates a PostSourceJottacloudDatasetDatasetNameInternalServerError with default headers values
func NewPostSourceJottacloudDatasetDatasetNameInternalServerError() *PostSourceJottacloudDatasetDatasetNameInternalServerError {
	return &PostSourceJottacloudDatasetDatasetNameInternalServerError{}
}

/*
PostSourceJottacloudDatasetDatasetNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSourceJottacloudDatasetDatasetNameInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post source jottacloud dataset dataset name internal server error response has a 2xx status code
func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source jottacloud dataset dataset name internal server error response has a 3xx status code
func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source jottacloud dataset dataset name internal server error response has a 4xx status code
func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source jottacloud dataset dataset name internal server error response has a 5xx status code
func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post source jottacloud dataset dataset name internal server error response a status code equal to that given
func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post source jottacloud dataset dataset name internal server error response
func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) Code() int {
	return 500
}

func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) Error() string {
	return fmt.Sprintf("[POST /source/jottacloud/dataset/{datasetName}][%d] postSourceJottacloudDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) String() string {
	return fmt.Sprintf("[POST /source/jottacloud/dataset/{datasetName}][%d] postSourceJottacloudDatasetDatasetNameInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostSourceJottacloudDatasetDatasetNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
