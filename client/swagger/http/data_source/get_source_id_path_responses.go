// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// GetSourceIDPathReader is a Reader for the GetSourceIDPath structure.
type GetSourceIDPathReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSourceIDPathReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSourceIDPathOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSourceIDPathBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSourceIDPathInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /source/{id}/path] GetSourceIDPath", response, response.Code())
	}
}

// NewGetSourceIDPathOK creates a GetSourceIDPathOK with default headers values
func NewGetSourceIDPathOK() *GetSourceIDPathOK {
	return &GetSourceIDPathOK{}
}

/*
GetSourceIDPathOK describes a response with status code 200, with default header values.

OK
*/
type GetSourceIDPathOK struct {
	Payload *models.InspectDirDetail
}

// IsSuccess returns true when this get source Id path o k response has a 2xx status code
func (o *GetSourceIDPathOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get source Id path o k response has a 3xx status code
func (o *GetSourceIDPathOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get source Id path o k response has a 4xx status code
func (o *GetSourceIDPathOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get source Id path o k response has a 5xx status code
func (o *GetSourceIDPathOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get source Id path o k response a status code equal to that given
func (o *GetSourceIDPathOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get source Id path o k response
func (o *GetSourceIDPathOK) Code() int {
	return 200
}

func (o *GetSourceIDPathOK) Error() string {
	return fmt.Sprintf("[GET /source/{id}/path][%d] getSourceIdPathOK  %+v", 200, o.Payload)
}

func (o *GetSourceIDPathOK) String() string {
	return fmt.Sprintf("[GET /source/{id}/path][%d] getSourceIdPathOK  %+v", 200, o.Payload)
}

func (o *GetSourceIDPathOK) GetPayload() *models.InspectDirDetail {
	return o.Payload
}

func (o *GetSourceIDPathOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InspectDirDetail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSourceIDPathBadRequest creates a GetSourceIDPathBadRequest with default headers values
func NewGetSourceIDPathBadRequest() *GetSourceIDPathBadRequest {
	return &GetSourceIDPathBadRequest{}
}

/*
GetSourceIDPathBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetSourceIDPathBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get source Id path bad request response has a 2xx status code
func (o *GetSourceIDPathBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get source Id path bad request response has a 3xx status code
func (o *GetSourceIDPathBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get source Id path bad request response has a 4xx status code
func (o *GetSourceIDPathBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get source Id path bad request response has a 5xx status code
func (o *GetSourceIDPathBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get source Id path bad request response a status code equal to that given
func (o *GetSourceIDPathBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get source Id path bad request response
func (o *GetSourceIDPathBadRequest) Code() int {
	return 400
}

func (o *GetSourceIDPathBadRequest) Error() string {
	return fmt.Sprintf("[GET /source/{id}/path][%d] getSourceIdPathBadRequest  %+v", 400, o.Payload)
}

func (o *GetSourceIDPathBadRequest) String() string {
	return fmt.Sprintf("[GET /source/{id}/path][%d] getSourceIdPathBadRequest  %+v", 400, o.Payload)
}

func (o *GetSourceIDPathBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetSourceIDPathBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSourceIDPathInternalServerError creates a GetSourceIDPathInternalServerError with default headers values
func NewGetSourceIDPathInternalServerError() *GetSourceIDPathInternalServerError {
	return &GetSourceIDPathInternalServerError{}
}

/*
GetSourceIDPathInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSourceIDPathInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this get source Id path internal server error response has a 2xx status code
func (o *GetSourceIDPathInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get source Id path internal server error response has a 3xx status code
func (o *GetSourceIDPathInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get source Id path internal server error response has a 4xx status code
func (o *GetSourceIDPathInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get source Id path internal server error response has a 5xx status code
func (o *GetSourceIDPathInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get source Id path internal server error response a status code equal to that given
func (o *GetSourceIDPathInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get source Id path internal server error response
func (o *GetSourceIDPathInternalServerError) Code() int {
	return 500
}

func (o *GetSourceIDPathInternalServerError) Error() string {
	return fmt.Sprintf("[GET /source/{id}/path][%d] getSourceIdPathInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSourceIDPathInternalServerError) String() string {
	return fmt.Sprintf("[GET /source/{id}/path][%d] getSourceIdPathInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSourceIDPathInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *GetSourceIDPathInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
