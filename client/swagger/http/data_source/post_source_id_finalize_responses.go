// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostSourceIDFinalizeReader is a Reader for the PostSourceIDFinalize structure.
type PostSourceIDFinalizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSourceIDFinalizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostSourceIDFinalizeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSourceIDFinalizeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSourceIDFinalizeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /source/{id}/finalize] PostSourceIDFinalize", response, response.Code())
	}
}

// NewPostSourceIDFinalizeCreated creates a PostSourceIDFinalizeCreated with default headers values
func NewPostSourceIDFinalizeCreated() *PostSourceIDFinalizeCreated {
	return &PostSourceIDFinalizeCreated{}
}

/*
PostSourceIDFinalizeCreated describes a response with status code 201, with default header values.

Created
*/
type PostSourceIDFinalizeCreated struct {
}

// IsSuccess returns true when this post source Id finalize created response has a 2xx status code
func (o *PostSourceIDFinalizeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post source Id finalize created response has a 3xx status code
func (o *PostSourceIDFinalizeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source Id finalize created response has a 4xx status code
func (o *PostSourceIDFinalizeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source Id finalize created response has a 5xx status code
func (o *PostSourceIDFinalizeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post source Id finalize created response a status code equal to that given
func (o *PostSourceIDFinalizeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post source Id finalize created response
func (o *PostSourceIDFinalizeCreated) Code() int {
	return 201
}

func (o *PostSourceIDFinalizeCreated) Error() string {
	return fmt.Sprintf("[POST /source/{id}/finalize][%d] postSourceIdFinalizeCreated ", 201)
}

func (o *PostSourceIDFinalizeCreated) String() string {
	return fmt.Sprintf("[POST /source/{id}/finalize][%d] postSourceIdFinalizeCreated ", 201)
}

func (o *PostSourceIDFinalizeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSourceIDFinalizeBadRequest creates a PostSourceIDFinalizeBadRequest with default headers values
func NewPostSourceIDFinalizeBadRequest() *PostSourceIDFinalizeBadRequest {
	return &PostSourceIDFinalizeBadRequest{}
}

/*
PostSourceIDFinalizeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSourceIDFinalizeBadRequest struct {
	Payload string
}

// IsSuccess returns true when this post source Id finalize bad request response has a 2xx status code
func (o *PostSourceIDFinalizeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source Id finalize bad request response has a 3xx status code
func (o *PostSourceIDFinalizeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source Id finalize bad request response has a 4xx status code
func (o *PostSourceIDFinalizeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post source Id finalize bad request response has a 5xx status code
func (o *PostSourceIDFinalizeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post source Id finalize bad request response a status code equal to that given
func (o *PostSourceIDFinalizeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post source Id finalize bad request response
func (o *PostSourceIDFinalizeBadRequest) Code() int {
	return 400
}

func (o *PostSourceIDFinalizeBadRequest) Error() string {
	return fmt.Sprintf("[POST /source/{id}/finalize][%d] postSourceIdFinalizeBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceIDFinalizeBadRequest) String() string {
	return fmt.Sprintf("[POST /source/{id}/finalize][%d] postSourceIdFinalizeBadRequest  %+v", 400, o.Payload)
}

func (o *PostSourceIDFinalizeBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PostSourceIDFinalizeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSourceIDFinalizeInternalServerError creates a PostSourceIDFinalizeInternalServerError with default headers values
func NewPostSourceIDFinalizeInternalServerError() *PostSourceIDFinalizeInternalServerError {
	return &PostSourceIDFinalizeInternalServerError{}
}

/*
PostSourceIDFinalizeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSourceIDFinalizeInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this post source Id finalize internal server error response has a 2xx status code
func (o *PostSourceIDFinalizeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post source Id finalize internal server error response has a 3xx status code
func (o *PostSourceIDFinalizeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post source Id finalize internal server error response has a 4xx status code
func (o *PostSourceIDFinalizeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post source Id finalize internal server error response has a 5xx status code
func (o *PostSourceIDFinalizeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post source Id finalize internal server error response a status code equal to that given
func (o *PostSourceIDFinalizeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post source Id finalize internal server error response
func (o *PostSourceIDFinalizeInternalServerError) Code() int {
	return 500
}

func (o *PostSourceIDFinalizeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /source/{id}/finalize][%d] postSourceIdFinalizeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceIDFinalizeInternalServerError) String() string {
	return fmt.Sprintf("[POST /source/{id}/finalize][%d] postSourceIdFinalizeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSourceIDFinalizeInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *PostSourceIDFinalizeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
