// Code generated by go-swagger; DO NOT EDIT.

package data_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/data-preservation-programs/singularity/client/swagger/models"
)

// PostPreparationIDSourceNameFileReader is a Reader for the PostPreparationIDSourceNameFile structure.
type PostPreparationIDSourceNameFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPreparationIDSourceNameFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPreparationIDSourceNameFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPreparationIDSourceNameFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPreparationIDSourceNameFileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /preparation/{id}/source/{name}/file] PostPreparationIDSourceNameFile", response, response.Code())
	}
}

// NewPostPreparationIDSourceNameFileOK creates a PostPreparationIDSourceNameFileOK with default headers values
func NewPostPreparationIDSourceNameFileOK() *PostPreparationIDSourceNameFileOK {
	return &PostPreparationIDSourceNameFileOK{}
}

/*
PostPreparationIDSourceNameFileOK describes a response with status code 200, with default header values.

OK
*/
type PostPreparationIDSourceNameFileOK struct {
	Payload *models.ModelFile
}

// IsSuccess returns true when this post preparation Id source name file o k response has a 2xx status code
func (o *PostPreparationIDSourceNameFileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post preparation Id source name file o k response has a 3xx status code
func (o *PostPreparationIDSourceNameFileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name file o k response has a 4xx status code
func (o *PostPreparationIDSourceNameFileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name file o k response has a 5xx status code
func (o *PostPreparationIDSourceNameFileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name file o k response a status code equal to that given
func (o *PostPreparationIDSourceNameFileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post preparation Id source name file o k response
func (o *PostPreparationIDSourceNameFileOK) Code() int {
	return 200
}

func (o *PostPreparationIDSourceNameFileOK) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/file][%d] postPreparationIdSourceNameFileOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNameFileOK) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/file][%d] postPreparationIdSourceNameFileOK  %+v", 200, o.Payload)
}

func (o *PostPreparationIDSourceNameFileOK) GetPayload() *models.ModelFile {
	return o.Payload
}

func (o *PostPreparationIDSourceNameFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNameFileBadRequest creates a PostPreparationIDSourceNameFileBadRequest with default headers values
func NewPostPreparationIDSourceNameFileBadRequest() *PostPreparationIDSourceNameFileBadRequest {
	return &PostPreparationIDSourceNameFileBadRequest{}
}

/*
PostPreparationIDSourceNameFileBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPreparationIDSourceNameFileBadRequest struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name file bad request response has a 2xx status code
func (o *PostPreparationIDSourceNameFileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name file bad request response has a 3xx status code
func (o *PostPreparationIDSourceNameFileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name file bad request response has a 4xx status code
func (o *PostPreparationIDSourceNameFileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post preparation Id source name file bad request response has a 5xx status code
func (o *PostPreparationIDSourceNameFileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post preparation Id source name file bad request response a status code equal to that given
func (o *PostPreparationIDSourceNameFileBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post preparation Id source name file bad request response
func (o *PostPreparationIDSourceNameFileBadRequest) Code() int {
	return 400
}

func (o *PostPreparationIDSourceNameFileBadRequest) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/file][%d] postPreparationIdSourceNameFileBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNameFileBadRequest) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/file][%d] postPreparationIdSourceNameFileBadRequest  %+v", 400, o.Payload)
}

func (o *PostPreparationIDSourceNameFileBadRequest) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNameFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPreparationIDSourceNameFileInternalServerError creates a PostPreparationIDSourceNameFileInternalServerError with default headers values
func NewPostPreparationIDSourceNameFileInternalServerError() *PostPreparationIDSourceNameFileInternalServerError {
	return &PostPreparationIDSourceNameFileInternalServerError{}
}

/*
PostPreparationIDSourceNameFileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostPreparationIDSourceNameFileInternalServerError struct {
	Payload *models.APIHTTPError
}

// IsSuccess returns true when this post preparation Id source name file internal server error response has a 2xx status code
func (o *PostPreparationIDSourceNameFileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post preparation Id source name file internal server error response has a 3xx status code
func (o *PostPreparationIDSourceNameFileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post preparation Id source name file internal server error response has a 4xx status code
func (o *PostPreparationIDSourceNameFileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post preparation Id source name file internal server error response has a 5xx status code
func (o *PostPreparationIDSourceNameFileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post preparation Id source name file internal server error response a status code equal to that given
func (o *PostPreparationIDSourceNameFileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post preparation Id source name file internal server error response
func (o *PostPreparationIDSourceNameFileInternalServerError) Code() int {
	return 500
}

func (o *PostPreparationIDSourceNameFileInternalServerError) Error() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/file][%d] postPreparationIdSourceNameFileInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNameFileInternalServerError) String() string {
	return fmt.Sprintf("[POST /preparation/{id}/source/{name}/file][%d] postPreparationIdSourceNameFileInternalServerError  %+v", 500, o.Payload)
}

func (o *PostPreparationIDSourceNameFileInternalServerError) GetPayload() *models.APIHTTPError {
	return o.Payload
}

func (o *PostPreparationIDSourceNameFileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
